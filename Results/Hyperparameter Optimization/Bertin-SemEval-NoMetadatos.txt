[I 2022-07-17 00:07:29,366] A new study created in memory with name: hyper-parameter-search
Some weights of the model checkpoint at maxpe/bertin-roberta-base-spanish_semeval18_emodetection were not used when initializing RobertaForSequenceClassification: ['l1.encoder.layer.11.attention.output.dense.weight', 'l1.encoder.layer.7.intermediate.dense.bias', 'l1.embeddings.position_embeddings.weight', 'l1.encoder.layer.0.attention.output.dense.weight', 'l1.encoder.layer.2.attention.self.query.bias', 'l1.encoder.layer.4.attention.output.dense.weight', 'l1.encoder.layer.6.output.dense.bias', 'l1.encoder.layer.6.attention.self.query.bias', 'l1.encoder.layer.10.attention.self.value.weight', 'l1.encoder.layer.7.attention.self.key.weight', 'l1.encoder.layer.7.attention.self.value.weight', 'l1.encoder.layer.5.intermediate.dense.bias', 'l1.encoder.layer.1.output.dense.bias', 'l1.encoder.layer.0.attention.self.query.bias', 'l1.encoder.layer.6.intermediate.dense.weight', 'l1.encoder.layer.7.output.dense.bias', 'l1.encoder.layer.1.attention.self.value.weight', 'l1.encoder.layer.3.attention.output.dense.bias', 'l1.encoder.layer.10.output.LayerNorm.bias', 'l1.encoder.layer.4.intermediate.dense.weight', 'l1.encoder.layer.11.attention.self.query.weight', 'l1.encoder.layer.7.attention.self.value.bias', 'l1.encoder.layer.3.attention.output.LayerNorm.weight', 'l1.encoder.layer.3.intermediate.dense.bias', 'l1.encoder.layer.0.output.LayerNorm.bias', 'l1.encoder.layer.7.attention.self.key.bias', 'l1.encoder.layer.1.attention.output.dense.weight', 'l1.encoder.layer.8.attention.self.key.weight', 'l1.encoder.layer.4.attention.output.dense.bias', 'l1.encoder.layer.6.attention.output.dense.weight', 'l1.encoder.layer.9.attention.output.dense.bias', 'l1.encoder.layer.8.attention.self.query.weight', 'l1.encoder.layer.1.attention.output.dense.bias', 'l1.encoder.layer.0.attention.self.value.weight', 'l1.encoder.layer.5.attention.output.LayerNorm.bias', 'l1.encoder.layer.4.attention.self.query.bias', 'l1.encoder.layer.10.attention.output.dense.weight', 'l1.encoder.layer.8.attention.output.LayerNorm.bias', 'l1.encoder.layer.2.attention.output.dense.weight', 'l1.encoder.layer.8.output.LayerNorm.bias', 'l1.embeddings.LayerNorm.bias', 'l1.encoder.layer.4.attention.output.LayerNorm.weight', 'l3.weight', 'l1.embeddings.word_embeddings.weight', 'l1.encoder.layer.11.attention.self.key.bias', 'l3.bias', 'l1.encoder.layer.2.attention.self.query.weight', 'l1.encoder.layer.8.attention.self.value.weight', 'l1.encoder.layer.4.output.dense.weight', 'l1.encoder.layer.4.attention.self.value.bias', 'l1.encoder.layer.6.attention.self.value.bias', 'l1.encoder.layer.11.attention.self.query.bias', 'l1.encoder.layer.0.attention.self.key.bias', 'l1.encoder.layer.4.attention.self.query.weight', 'l1.encoder.layer.2.intermediate.dense.weight', 'l1.encoder.layer.11.attention.self.key.weight', 'l1.encoder.layer.0.intermediate.dense.bias', 'l1.encoder.layer.11.attention.output.LayerNorm.bias', 'l1.encoder.layer.8.attention.output.LayerNorm.weight', 'l1.encoder.layer.5.attention.self.query.bias', 'l1.encoder.layer.11.output.dense.weight', 'l1.encoder.layer.10.intermediate.dense.weight', 'l1.encoder.layer.7.attention.self.query.bias', 'l1.encoder.layer.3.attention.self.query.weight', 'l1.encoder.layer.3.attention.self.query.bias', 'l1.encoder.layer.11.intermediate.dense.weight', 'l1.encoder.layer.10.attention.output.LayerNorm.weight', 'l1.encoder.layer.11.attention.output.LayerNorm.weight', 'l1.encoder.layer.11.attention.self.value.weight', 'l1.encoder.layer.3.output.dense.bias', 'l1.encoder.layer.1.intermediate.dense.bias', 'l1.encoder.layer.1.attention.output.LayerNorm.weight', 'l1.encoder.layer.10.output.dense.weight', 'l1.embeddings.position_ids', 'l1.encoder.layer.1.output.dense.weight', 'l1.encoder.layer.9.attention.output.LayerNorm.bias', 'l1.encoder.layer.2.attention.output.LayerNorm.bias', 'l1.encoder.layer.9.attention.self.key.weight', 'l1.encoder.layer.3.attention.output.dense.weight', 'l1.encoder.layer.9.attention.self.query.bias', 'l1.encoder.layer.9.attention.output.dense.weight', 'l1.encoder.layer.9.attention.output.LayerNorm.weight', 'l1.encoder.layer.11.output.dense.bias', 'l1.pooler.dense.weight', 'l1.encoder.layer.5.attention.self.key.bias', 'l1.encoder.layer.6.output.dense.weight', 'l1.encoder.layer.2.attention.self.value.bias', 'l1.encoder.layer.11.intermediate.dense.bias', 'l1.encoder.layer.1.intermediate.dense.weight', 'l1.encoder.layer.4.output.dense.bias', 'l1.encoder.layer.7.output.dense.weight', 'l1.encoder.layer.11.output.LayerNorm.bias', 'l1.encoder.layer.2.intermediate.dense.bias', 'l1.encoder.layer.3.intermediate.dense.weight', 'l1.encoder.layer.9.attention.self.key.bias', 'l1.encoder.layer.0.output.dense.bias', 'l1.encoder.layer.6.intermediate.dense.bias', 'l1.encoder.layer.7.attention.output.dense.weight', 'l1.encoder.layer.8.attention.self.key.bias', 'l1.encoder.layer.11.attention.output.dense.bias', 'l1.encoder.layer.8.attention.output.dense.weight', 'l1.encoder.layer.11.output.LayerNorm.weight', 'l1.encoder.layer.5.attention.output.LayerNorm.weight', 'l1.encoder.layer.0.attention.output.LayerNorm.bias', 'l1.encoder.layer.5.intermediate.dense.weight', 'l1.encoder.layer.8.attention.self.query.bias', 'l1.encoder.layer.10.attention.self.value.bias', 'l1.encoder.layer.5.output.dense.weight', 'l1.encoder.layer.6.attention.self.key.bias', 'l1.encoder.layer.7.attention.self.query.weight', 'l1.encoder.layer.6.output.LayerNorm.bias', 'l1.encoder.layer.2.attention.output.LayerNorm.weight', 'l1.encoder.layer.0.intermediate.dense.weight', 'l1.encoder.layer.8.output.dense.bias', 'l1.encoder.layer.9.intermediate.dense.bias', 'l1.encoder.layer.6.attention.output.LayerNorm.bias', 'l1.encoder.layer.7.attention.output.LayerNorm.weight', 'l1.encoder.layer.4.output.LayerNorm.weight', 'l1.encoder.layer.9.output.LayerNorm.weight', 'l1.encoder.layer.1.output.LayerNorm.bias', 'l1.encoder.layer.3.attention.self.value.bias', 'l1.encoder.layer.1.attention.self.key.bias', 'l1.encoder.layer.6.attention.self.query.weight', 'l1.encoder.layer.2.attention.output.dense.bias', 'l1.encoder.layer.0.attention.self.key.weight', 'l1.encoder.layer.4.attention.self.value.weight', 'l1.encoder.layer.0.output.LayerNorm.weight', 'l1.encoder.layer.6.attention.self.key.weight', 'l1.encoder.layer.0.attention.self.query.weight', 'l1.encoder.layer.11.attention.self.value.bias', 'l1.encoder.layer.5.output.LayerNorm.bias', 'l1.encoder.layer.10.output.dense.bias', 'l1.encoder.layer.2.output.dense.bias', 'l1.encoder.layer.5.attention.self.query.weight', 'l1.encoder.layer.7.attention.output.dense.bias', 'l1.encoder.layer.9.output.dense.bias', 'l1.encoder.layer.2.attention.self.key.weight', 'l1.encoder.layer.2.output.dense.weight', 'l1.encoder.layer.10.intermediate.dense.bias', 'l1.encoder.layer.8.output.LayerNorm.weight', 'l1.encoder.layer.3.output.dense.weight', 'l1.encoder.layer.1.attention.self.query.bias', 'l1.encoder.layer.10.output.LayerNorm.weight', 'l1.encoder.layer.3.output.LayerNorm.bias', 'l1.encoder.layer.7.output.LayerNorm.weight', 'l1.encoder.layer.4.intermediate.dense.bias', 'l1.encoder.layer.9.attention.self.value.bias', 'l1.encoder.layer.7.attention.output.LayerNorm.bias', 'l1.encoder.layer.8.intermediate.dense.weight', 'l1.encoder.layer.2.attention.self.key.bias', 'l1.encoder.layer.4.attention.output.LayerNorm.bias', 'l1.encoder.layer.6.attention.output.dense.bias', 'l1.embeddings.LayerNorm.weight', 'l1.encoder.layer.2.output.LayerNorm.bias', 'l1.encoder.layer.8.output.dense.weight', 'l1.encoder.layer.7.output.LayerNorm.bias', 'l1.encoder.layer.1.output.LayerNorm.weight', 'l1.encoder.layer.0.output.dense.weight', 'l1.encoder.layer.1.attention.output.LayerNorm.bias', 'l1.encoder.layer.10.attention.self.key.weight', 'l1.encoder.layer.9.attention.self.value.weight', 'l1.encoder.layer.6.output.LayerNorm.weight', 'l1.encoder.layer.3.attention.self.key.weight', 'l1.encoder.layer.1.attention.self.key.weight', 'l1.encoder.layer.10.attention.self.query.bias', 'l1.encoder.layer.1.attention.self.value.bias', 'l1.encoder.layer.9.attention.self.query.weight', 'l1.encoder.layer.8.intermediate.dense.bias', 'l1.encoder.layer.0.attention.self.value.bias', 'l1.encoder.layer.4.attention.self.key.weight', 'l1.encoder.layer.0.attention.output.LayerNorm.weight', 'l1.encoder.layer.9.output.LayerNorm.bias', 'l1.encoder.layer.9.output.dense.weight', 'l1.encoder.layer.10.attention.output.LayerNorm.bias', 'l1.encoder.layer.5.attention.self.key.weight', 'l1.encoder.layer.9.intermediate.dense.weight', 'l1.encoder.layer.8.attention.self.value.bias', 'l1.encoder.layer.0.attention.output.dense.bias', 'l1.encoder.layer.2.attention.self.value.weight', 'l1.encoder.layer.5.output.LayerNorm.weight', 'l1.encoder.layer.8.attention.output.dense.bias', 'l1.encoder.layer.3.attention.self.key.bias', 'l1.encoder.layer.6.attention.self.value.weight', 'l1.encoder.layer.3.output.LayerNorm.weight', 'l1.encoder.layer.5.attention.self.value.bias', 'l1.embeddings.token_type_embeddings.weight', 'l1.encoder.layer.3.attention.self.value.weight', 'l1.encoder.layer.5.output.dense.bias', 'l1.encoder.layer.7.intermediate.dense.weight', 'l1.pooler.dense.bias', 'l1.encoder.layer.5.attention.self.value.weight', 'l1.encoder.layer.4.output.LayerNorm.bias', 'l1.encoder.layer.2.output.LayerNorm.weight', 'l1.encoder.layer.1.attention.self.query.weight', 'l1.encoder.layer.3.attention.output.LayerNorm.bias', 'l1.encoder.layer.5.attention.output.dense.weight', 'l1.encoder.layer.4.attention.self.key.bias', 'l1.encoder.layer.5.attention.output.dense.bias', 'l1.encoder.layer.6.attention.output.LayerNorm.weight', 'l1.encoder.layer.10.attention.self.query.weight', 'l1.encoder.layer.10.attention.output.dense.bias', 'l1.encoder.layer.10.attention.self.key.bias']
- This IS expected if you are initializing RobertaForSequenceClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaForSequenceClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of RobertaForSequenceClassification were not initialized from the model checkpoint at maxpe/bertin-roberta-base-spanish_semeval18_emodetection and are newly initialized: ['encoder.layer.10.attention.self.value.weight', 'encoder.layer.9.attention.output.LayerNorm.bias', 'encoder.layer.9.intermediate.dense.bias', 'embeddings.position_embeddings.weight', 'encoder.layer.0.output.LayerNorm.weight', 'embeddings.token_type_embeddings.weight', 'encoder.layer.5.output.LayerNorm.weight', 'encoder.layer.10.attention.self.value.bias', 'encoder.layer.10.intermediate.dense.weight', 'encoder.layer.8.intermediate.dense.weight', 'encoder.layer.4.attention.self.value.bias', 'encoder.layer.3.output.LayerNorm.weight', 'encoder.layer.0.attention.self.value.bias', 'encoder.layer.4.output.dense.weight', 'encoder.layer.0.output.dense.bias', 'encoder.layer.2.attention.self.key.bias', 'encoder.layer.8.attention.output.LayerNorm.weight', 'encoder.layer.11.attention.output.LayerNorm.weight', 'encoder.layer.9.attention.self.key.bias', 'encoder.layer.4.output.LayerNorm.bias', 'encoder.layer.10.output.dense.bias', 'encoder.layer.3.intermediate.dense.weight', 'encoder.layer.3.intermediate.dense.bias', 'encoder.layer.6.intermediate.dense.bias', 'classifier.dense.bias', 'encoder.layer.8.attention.self.key.bias', 'encoder.layer.1.attention.output.dense.bias', 'encoder.layer.8.attention.output.dense.weight', 'encoder.layer.5.attention.output.dense.bias', 'encoder.layer.5.attention.self.value.weight', 'encoder.layer.1.attention.self.query.weight', 'encoder.layer.2.output.dense.bias', 'encoder.layer.5.intermediate.dense.bias', 'encoder.layer.1.attention.self.key.bias', 'encoder.layer.6.attention.self.value.weight', 'encoder.layer.9.attention.output.dense.bias', 'encoder.layer.7.intermediate.dense.weight', 'encoder.layer.11.attention.self.key.weight', 'encoder.layer.1.output.dense.bias', 'encoder.layer.1.output.LayerNorm.bias', 'encoder.layer.6.attention.self.value.bias', 'encoder.layer.11.attention.self.value.bias', 'encoder.layer.9.output.LayerNorm.bias', 'encoder.layer.7.output.dense.weight', 'encoder.layer.2.attention.output.LayerNorm.bias', 'encoder.layer.5.attention.self.value.bias', 'encoder.layer.8.attention.self.value.weight', 'encoder.layer.7.attention.output.dense.bias', 'encoder.layer.4.intermediate.dense.bias', 'encoder.layer.8.intermediate.dense.bias', 'encoder.layer.9.output.dense.bias', 'classifier.out_proj.weight', 'encoder.layer.2.attention.self.query.bias', 'encoder.layer.8.attention.output.LayerNorm.bias', 'encoder.layer.0.output.dense.weight', 'encoder.layer.3.attention.output.dense.weight', 'encoder.layer.11.attention.self.value.weight', 'encoder.layer.6.attention.output.LayerNorm.weight', 'encoder.layer.1.attention.self.value.weight', 'encoder.layer.3.attention.self.query.weight', 'encoder.layer.4.attention.output.dense.bias', 'encoder.layer.1.attention.output.LayerNorm.bias', 'encoder.layer.10.output.LayerNorm.weight', 'encoder.layer.2.output.dense.weight', 'encoder.layer.3.output.dense.bias', 'encoder.layer.2.intermediate.dense.weight', 'encoder.layer.6.output.dense.bias', 'encoder.layer.9.attention.output.LayerNorm.weight', 'classifier.out_proj.bias', 'encoder.layer.7.attention.output.LayerNorm.weight', 'encoder.layer.3.output.LayerNorm.bias', 'encoder.layer.5.attention.output.LayerNorm.bias', 'encoder.layer.11.attention.self.key.bias', 'encoder.layer.11.attention.output.dense.weight', 'encoder.layer.3.attention.output.dense.bias', 'encoder.layer.8.output.dense.weight', 'encoder.layer.7.attention.self.value.bias', 'encoder.layer.4.attention.self.value.weight', 'encoder.layer.6.attention.output.dense.weight', 'encoder.layer.0.attention.self.query.bias', 'encoder.layer.3.attention.self.value.bias', 'encoder.layer.11.output.LayerNorm.bias', 'encoder.layer.11.attention.self.query.weight', 'encoder.layer.2.attention.output.dense.bias', 'embeddings.LayerNorm.bias', 'encoder.layer.4.output.dense.bias', 'encoder.layer.0.attention.self.value.weight', 'encoder.layer.10.output.dense.weight', 'encoder.layer.2.attention.self.value.bias', 'encoder.layer.11.intermediate.dense.weight', 'encoder.layer.11.output.dense.weight', 'encoder.layer.2.attention.output.LayerNorm.weight', 'encoder.layer.10.attention.output.LayerNorm.weight', 'encoder.layer.8.attention.self.value.bias', 'encoder.layer.7.output.dense.bias', 'encoder.layer.6.output.LayerNorm.bias', 'encoder.layer.10.intermediate.dense.bias', 'embeddings.word_embeddings.weight', 'classifier.dense.weight', 'encoder.layer.8.output.LayerNorm.bias', 'encoder.layer.10.output.LayerNorm.bias', 'encoder.layer.5.output.dense.weight', 'encoder.layer.2.attention.self.query.weight', 'encoder.layer.5.attention.output.dense.weight', 'encoder.layer.9.attention.self.query.weight', 'encoder.layer.0.intermediate.dense.bias', 'encoder.layer.5.output.dense.bias', 'encoder.layer.0.intermediate.dense.weight', 'encoder.layer.9.attention.self.value.bias', 'encoder.layer.8.attention.self.key.weight', 'encoder.layer.0.attention.output.LayerNorm.weight', 'encoder.layer.2.output.LayerNorm.weight', 'encoder.layer.7.attention.self.value.weight', 'encoder.layer.6.attention.self.query.bias', 'encoder.layer.7.attention.output.LayerNorm.bias', 'encoder.layer.9.output.LayerNorm.weight', 'encoder.layer.11.output.dense.bias', 'encoder.layer.1.output.dense.weight', 'encoder.layer.0.attention.output.dense.bias', 'encoder.layer.7.attention.self.query.bias', 'encoder.layer.8.attention.output.dense.bias', 'encoder.layer.9.attention.self.query.bias', 'encoder.layer.3.attention.self.query.bias', 'encoder.layer.9.attention.self.value.weight', 'encoder.layer.6.attention.output.LayerNorm.bias', 'encoder.layer.8.output.dense.bias', 'encoder.layer.0.attention.self.query.weight', 'encoder.layer.3.output.dense.weight', 'encoder.layer.4.attention.output.dense.weight', 'encoder.layer.5.attention.self.query.weight', 'encoder.layer.4.attention.self.query.weight', 'encoder.layer.3.attention.self.key.weight', 'encoder.layer.1.intermediate.dense.bias', 'encoder.layer.1.attention.output.dense.weight', 'encoder.layer.3.attention.self.key.bias', 'encoder.layer.5.attention.self.key.weight', 'encoder.layer.9.output.dense.weight', 'encoder.layer.10.attention.self.key.weight', 'encoder.layer.7.output.LayerNorm.bias', 'encoder.layer.3.attention.output.LayerNorm.bias', 'encoder.layer.0.output.LayerNorm.bias', 'encoder.layer.10.attention.self.key.bias', 'encoder.layer.4.attention.self.key.bias', 'encoder.layer.11.attention.self.query.bias', 'encoder.layer.2.output.LayerNorm.bias', 'encoder.layer.5.attention.self.query.bias', 'encoder.layer.7.attention.output.dense.weight', 'encoder.layer.1.attention.self.value.bias', 'encoder.layer.7.attention.self.query.weight', 'encoder.layer.10.attention.self.query.bias', 'encoder.layer.8.output.LayerNorm.weight', 'encoder.layer.4.attention.output.LayerNorm.bias', 'encoder.layer.11.output.LayerNorm.weight', 'encoder.layer.6.output.dense.weight', 'encoder.layer.3.attention.self.value.weight', 'encoder.layer.7.output.LayerNorm.weight', 'encoder.layer.1.attention.output.LayerNorm.weight', 'encoder.layer.9.attention.self.key.weight', 'encoder.layer.0.attention.output.LayerNorm.bias', 'encoder.layer.5.intermediate.dense.weight', 'encoder.layer.4.attention.self.key.weight', 'encoder.layer.5.attention.self.key.bias', 'encoder.layer.11.intermediate.dense.bias', 'encoder.layer.5.attention.output.LayerNorm.weight', 'encoder.layer.4.attention.self.query.bias', 'encoder.layer.10.attention.output.dense.weight', 'encoder.layer.11.attention.output.dense.bias', 'encoder.layer.6.attention.self.key.weight', 'encoder.layer.6.output.LayerNorm.weight', 'embeddings.LayerNorm.weight', 'encoder.layer.7.intermediate.dense.bias', 'encoder.layer.4.attention.output.LayerNorm.weight', 'encoder.layer.1.attention.self.query.bias', 'encoder.layer.6.attention.self.query.weight', 'encoder.layer.10.attention.output.LayerNorm.bias', 'encoder.layer.10.attention.self.query.weight', 'encoder.layer.6.intermediate.dense.weight', 'encoder.layer.10.attention.output.dense.bias', 'encoder.layer.8.attention.self.query.bias', 'encoder.layer.2.attention.self.key.weight', 'encoder.layer.5.output.LayerNorm.bias', 'encoder.layer.6.attention.self.key.bias', 'encoder.layer.7.attention.self.key.weight', 'encoder.layer.2.attention.output.dense.weight', 'encoder.layer.6.attention.output.dense.bias', 'encoder.layer.1.intermediate.dense.weight', 'encoder.layer.7.attention.self.key.bias', 'encoder.layer.4.output.LayerNorm.weight', 'encoder.layer.4.intermediate.dense.weight', 'encoder.layer.2.intermediate.dense.bias', 'encoder.layer.11.attention.output.LayerNorm.bias', 'encoder.layer.0.attention.self.key.weight', 'encoder.layer.2.attention.self.value.weight', 'encoder.layer.0.attention.output.dense.weight', 'encoder.layer.1.attention.self.key.weight', 'encoder.layer.9.intermediate.dense.weight', 'encoder.layer.0.attention.self.key.bias', 'encoder.layer.1.output.LayerNorm.weight', 'encoder.layer.3.attention.output.LayerNorm.weight', 'encoder.layer.8.attention.self.query.weight', 'encoder.layer.9.attention.output.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Using custom data configuration default-bdf2d38ff4c39ebf
Reusing dataset csv (/root/.cache/huggingface/datasets/csv/default-bdf2d38ff4c39ebf/0.0.0/51cce309a08df9c4d82ffd9363bbe090bf173197fc01a71b034e8594995a1a58)
100%
3/3 [00:00<00:00, 33.14it/s]
Parameter 'function'=<function Pruebas.preprocess_text at 0x7f9206d1b440> of the transform datasets.arrow_dataset.Dataset._map_single couldn't be hashed properly, a random hash was used instead. Make sure your transforms and parameters are serializable with pickle or dill for the dataset fingerprinting and caching to work. If you reuse this transform, the caching mechanism will consider it to be different from the previous calls and recompute everything. This warning is only showed once. Subsequent hashing failures won't be showed.
100%
17/17 [00:05<00:00, 5.24ba/s]
100%
14/14 [00:03<00:00, 5.05ba/s]
100%
1/1 [00:00<00:00, 13.65ba/s]
The following columns in the training set don't have a corresponding argument in `RobertaForSequenceClassification.forward` and have been ignored: comment, comment_id, influencer_gender, media, influencer. If comment, comment_id, influencer_gender, media, influencer are not expected by `RobertaForSequenceClassification.forward`,  you can safely ignore this message.
/usr/local/lib/python3.7/dist-packages/transformers/optimization.py:310: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  FutureWarning,
***** Running training *****
  Num examples = 16710
  Num Epochs = 5
  Instantaneous batch size per device = 16
  Total train batch size (w. parallel, distributed & accumulation) = 16
  Gradient Accumulation steps = 1
  Total optimization steps = 5225
{'loss': 0.6322, 'learning_rate': 1.325019155382022e-06, 'epoch': 0.48}
{'loss': 0.5785, 'learning_rate': 1.1848054881458293e-06, 'epoch': 0.96}
The following columns in the evaluation set don't have a corresponding argument in `RobertaForSequenceClassification.forward` and have been ignored: comment, comment_id, influencer_gender, media, influencer. If comment, comment_id, influencer_gender, media, influencer are not expected by `RobertaForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 100
  Batch size = 16
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Saving model checkpoint to ./testBertinTwitter/0/checkpoint-1045
Configuration saved in ./testBertinTwitter/0/checkpoint-1045/config.json
{'eval_loss': 1.0528855323791504, 'eval_maf': 0.2627708978328174, 'eval_map': 0.25946969696969696, 'eval_mar': 0.28764204545454547, 'eval_mif': 0.66, 'eval_mip': 0.66, 'eval_mir': 0.66, 'eval_avgf': 0.5738699690402478, 'eval_avgp': 0.5242424242424243, 'eval_avgr': 0.66, 'eval_mse': 1.26, 'eval_runtime': 2.9954, 'eval_samples_per_second': 33.384, 'eval_steps_per_second': 2.337, 'learning_rate': 1.172186258094572e-06, 'epoch': 1.0}
Model weights saved in ./testBertinTwitter/0/checkpoint-1045/pytorch_model.bin
tokenizer config file saved in ./testBertinTwitter/0/checkpoint-1045/tokenizer_config.json
Special tokens file saved in ./testBertinTwitter/0/checkpoint-1045/special_tokens_map.json
{'loss': 0.5862, 'learning_rate': 1.0445918209096364e-06, 'epoch': 1.44}
{'loss': 0.5731, 'learning_rate': 9.043781536734436e-07, 'epoch': 1.91}
The following columns in the evaluation set don't have a corresponding argument in `RobertaForSequenceClassification.forward` and have been ignored: comment, comment_id, influencer_gender, media, influencer. If comment, comment_id, influencer_gender, media, influencer are not expected by `RobertaForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 100
  Batch size = 16
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Saving model checkpoint to ./testBertinTwitter/0/checkpoint-2090
Configuration saved in ./testBertinTwitter/0/checkpoint-2090/config.json
{'eval_loss': 1.0563157796859741, 'eval_maf': 0.27672658467360456, 'eval_map': 0.27431476569407603, 'eval_mar': 0.2990056818181818, 'eval_mif': 0.67, 'eval_mip': 0.67, 'eval_mir': 0.67, 'eval_avgf': 0.5884200567644275, 'eval_avgp': 0.5407073386383732, 'eval_avgr': 0.67, 'eval_mse': 1.22, 'eval_runtime': 2.9929, 'eval_samples_per_second': 33.413, 'eval_steps_per_second': 2.339, 'learning_rate': 8.791396935709289e-07, 'epoch': 2.0}
Model weights saved in ./testBertinTwitter/0/checkpoint-2090/pytorch_model.bin
tokenizer config file saved in ./testBertinTwitter/0/checkpoint-2090/tokenizer_config.json
Special tokens file saved in ./testBertinTwitter/0/checkpoint-2090/special_tokens_map.json
{'loss': 0.5526, 'learning_rate': 7.641644864372507e-07, 'epoch': 2.39}
{'loss': 0.5529, 'learning_rate': 6.23950819201058e-07, 'epoch': 2.87}
The following columns in the evaluation set don't have a corresponding argument in `RobertaForSequenceClassification.forward` and have been ignored: comment, comment_id, influencer_gender, media, influencer. If comment, comment_id, influencer_gender, media, influencer are not expected by `RobertaForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 100
  Batch size = 16
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Saving model checkpoint to ./testBertinTwitter/0/checkpoint-3135
Configuration saved in ./testBertinTwitter/0/checkpoint-3135/config.json
{'eval_loss': 1.0215688943862915, 'eval_maf': 0.2761111111111111, 'eval_map': 0.2695182724252492, 'eval_mar': 0.2990056818181818, 'eval_mif': 0.67, 'eval_mip': 0.67, 'eval_mir': 0.67, 'eval_avgf': 0.5901777777777778, 'eval_avgp': 0.5399667774086379, 'eval_avgr': 0.67, 'eval_mse': 1.3, 'eval_runtime': 3.0018, 'eval_samples_per_second': 33.313, 'eval_steps_per_second': 2.332, 'learning_rate': 5.86093129047286e-07, 'epoch': 3.0}
Model weights saved in ./testBertinTwitter/0/checkpoint-3135/pytorch_model.bin
tokenizer config file saved in ./testBertinTwitter/0/checkpoint-3135/tokenizer_config.json
Special tokens file saved in ./testBertinTwitter/0/checkpoint-3135/special_tokens_map.json
{'loss': 0.5351, 'learning_rate': 4.837371519648652e-07, 'epoch': 3.35}
{'loss': 0.5242, 'learning_rate': 3.435234847286724e-07, 'epoch': 3.83}
The following columns in the evaluation set don't have a corresponding argument in `RobertaForSequenceClassification.forward` and have been ignored: comment, comment_id, influencer_gender, media, influencer. If comment, comment_id, influencer_gender, media, influencer are not expected by `RobertaForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 100
  Batch size = 16
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Saving model checkpoint to ./testBertinTwitter/0/checkpoint-4180
Configuration saved in ./testBertinTwitter/0/checkpoint-4180/config.json
{'eval_loss': 1.0752973556518555, 'eval_maf': 0.2660603715170279, 'eval_map': 0.2623106060606061, 'eval_mar': 0.29154829545454547, 'eval_mif': 0.67, 'eval_mip': 0.67, 'eval_mir': 0.67, 'eval_avgf': 0.5822910216718267, 'eval_avgp': 0.5315151515151516, 'eval_avgr': 0.67, 'eval_mse': 1.3, 'eval_runtime': 3.0052, 'eval_samples_per_second': 33.276, 'eval_steps_per_second': 2.329, 'learning_rate': 2.93046564523643e-07, 'epoch': 4.0}
Model weights saved in ./testBertinTwitter/0/checkpoint-4180/pytorch_model.bin
tokenizer config file saved in ./testBertinTwitter/0/checkpoint-4180/tokenizer_config.json
Special tokens file saved in ./testBertinTwitter/0/checkpoint-4180/special_tokens_map.json
{'loss': 0.5252, 'learning_rate': 2.0330981749247958e-07, 'epoch': 4.31}
{'loss': 0.5096, 'learning_rate': 6.309615025628677e-08, 'epoch': 4.78}
The following columns in the evaluation set don't have a corresponding argument in `RobertaForSequenceClassification.forward` and have been ignored: comment, comment_id, influencer_gender, media, influencer. If comment, comment_id, influencer_gender, media, influencer are not expected by `RobertaForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 100
  Batch size = 16
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Saving model checkpoint to ./testBertinTwitter/0/checkpoint-5225
Configuration saved in ./testBertinTwitter/0/checkpoint-5225/config.json
{'eval_loss': 1.034538984298706, 'eval_maf': 0.2660603715170279, 'eval_map': 0.2623106060606061, 'eval_mar': 0.29154829545454547, 'eval_mif': 0.67, 'eval_mip': 0.67, 'eval_mir': 0.67, 'eval_avgf': 0.5822910216718267, 'eval_avgp': 0.5315151515151516, 'eval_avgr': 0.67, 'eval_mse': 1.3, 'eval_runtime': 3.0054, 'eval_samples_per_second': 33.274, 'eval_steps_per_second': 2.329, 'learning_rate': 0.0, 'epoch': 5.0}
Model weights saved in ./testBertinTwitter/0/checkpoint-5225/pytorch_model.bin
tokenizer config file saved in ./testBertinTwitter/0/checkpoint-5225/tokenizer_config.json
Special tokens file saved in ./testBertinTwitter/0/checkpoint-5225/special_tokens_map.json


Training completed. Do not forget to share your model on huggingface.co/models =)


Loading best model from ./testBertinTwitter/0/checkpoint-3135 (score: 1.0215688943862915).
The following columns in the evaluation set don't have a corresponding argument in `RobertaForSequenceClassification.forward` and have been ignored: comment, comment_id, influencer_gender, media, influencer. If comment, comment_id, influencer_gender, media, influencer are not expected by `RobertaForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 100
  Batch size = 16
{'train_runtime': 7349.4834, 'train_samples_per_second': 11.368, 'train_steps_per_second': 0.711, 'train_loss': 0.5553669015984786, 'learning_rate': 0.0, 'epoch': 5.0}
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
[I 2022-07-17 02:10:26,965] Trial 0 finished with value: 0.5553669015984786 and parameters: {'learning_rate': 1.4652328226182148e-06, 'weight_decay': 4.089865410797355e-05, 'per_device_train_batch_size': 16}. Best is trial 0 with value: 0.5553669015984786.
{'eval_loss': 1.0215688943862915, 'eval_maf': 0.2761111111111111, 'eval_map': 0.2695182724252492, 'eval_mar': 0.2990056818181818, 'eval_mif': 0.67, 'eval_mip': 0.67, 'eval_mir': 0.67, 'eval_avgf': 0.5901777777777778, 'eval_avgp': 0.5399667774086379, 'eval_avgr': 0.67, 'eval_mse': 1.3, 'eval_runtime': 3.013, 'eval_samples_per_second': 33.189, 'eval_steps_per_second': 2.323, 'learning_rate': 0.0, 'epoch': 5.0}
loading configuration file https://huggingface.co/maxpe/bertin-roberta-base-spanish_semeval18_emodetection/resolve/main/config.json from cache at /root/.cache/huggingface/transformers/d4f1002ff603556d7da9b1dcc4f60837cb7b95475014ed3dca46003df9e5e073.3e6584dcdee85903ac728aeaf3e164cbeb7221cab9b7b326e24422b622ae0ef6
Model config RobertaConfig {
  "_name_or_path": "maxpe/bertin-roberta-base-spanish_semeval18_emodetection",
  "architectures": [
    "RobertaForSequenceClassification"
  ],
  "attention_probs_dropout_prob": 0.1,
  "bos_token_id": 0,
  "classifier_dropout": null,
  "eos_token_id": 2,
  "gradient_checkpointing": false,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "id2label": {
    "0": "LABEL_0",
    "1": "LABEL_1",
    "2": "LABEL_2",
    "3": "LABEL_3"
  },
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "label2id": {
    "LABEL_0": 0,
    "LABEL_1": 1,
    "LABEL_2": 2,
    "LABEL_3": 3
  },
  "layer_norm_eps": 1e-05,
  "max_position_embeddings": 514,
  "model_type": "roberta",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 1,
  "position_embedding_type": "absolute",
  "problem_type": "multi_label_classification",
  "transformers_version": "4.20.1",
  "type_vocab_size": 1,
  "use_cache": true,
  "vocab_size": 50265
}

loading weights file https://huggingface.co/maxpe/bertin-roberta-base-spanish_semeval18_emodetection/resolve/main/pytorch_model.bin from cache at /root/.cache/huggingface/transformers/d900c79ff1498657eb796142ec4f35629e79499bc87fff9f3226694959c66fc9.35439f36ce44b15b9d01b0b86490d9df3be95efe408acf4f3f724e10a60defb0
Some weights of the model checkpoint at maxpe/bertin-roberta-base-spanish_semeval18_emodetection were not used when initializing RobertaForSequenceClassification: ['l1.encoder.layer.11.attention.output.dense.weight', 'l1.encoder.layer.7.intermediate.dense.bias', 'l1.embeddings.position_embeddings.weight', 'l1.encoder.layer.0.attention.output.dense.weight', 'l1.encoder.layer.2.attention.self.query.bias', 'l1.encoder.layer.4.attention.output.dense.weight', 'l1.encoder.layer.6.output.dense.bias', 'l1.encoder.layer.6.attention.self.query.bias', 'l1.encoder.layer.10.attention.self.value.weight', 'l1.encoder.layer.7.attention.self.key.weight', 'l1.encoder.layer.7.attention.self.value.weight', 'l1.encoder.layer.5.intermediate.dense.bias', 'l1.encoder.layer.1.output.dense.bias', 'l1.encoder.layer.0.attention.self.query.bias', 'l1.encoder.layer.6.intermediate.dense.weight', 'l1.encoder.layer.7.output.dense.bias', 'l1.encoder.layer.1.attention.self.value.weight', 'l1.encoder.layer.3.attention.output.dense.bias', 'l1.encoder.layer.10.output.LayerNorm.bias', 'l1.encoder.layer.4.intermediate.dense.weight', 'l1.encoder.layer.11.attention.self.query.weight', 'l1.encoder.layer.7.attention.self.value.bias', 'l1.encoder.layer.3.attention.output.LayerNorm.weight', 'l1.encoder.layer.3.intermediate.dense.bias', 'l1.encoder.layer.0.output.LayerNorm.bias', 'l1.encoder.layer.7.attention.self.key.bias', 'l1.encoder.layer.1.attention.output.dense.weight', 'l1.encoder.layer.8.attention.self.key.weight', 'l1.encoder.layer.4.attention.output.dense.bias', 'l1.encoder.layer.6.attention.output.dense.weight', 'l1.encoder.layer.9.attention.output.dense.bias', 'l1.encoder.layer.8.attention.self.query.weight', 'l1.encoder.layer.1.attention.output.dense.bias', 'l1.encoder.layer.0.attention.self.value.weight', 'l1.encoder.layer.5.attention.output.LayerNorm.bias', 'l1.encoder.layer.4.attention.self.query.bias', 'l1.encoder.layer.10.attention.output.dense.weight', 'l1.encoder.layer.8.attention.output.LayerNorm.bias', 'l1.encoder.layer.2.attention.output.dense.weight', 'l1.encoder.layer.8.output.LayerNorm.bias', 'l1.embeddings.LayerNorm.bias', 'l1.encoder.layer.4.attention.output.LayerNorm.weight', 'l3.weight', 'l1.embeddings.word_embeddings.weight', 'l1.encoder.layer.11.attention.self.key.bias', 'l3.bias', 'l1.encoder.layer.2.attention.self.query.weight', 'l1.encoder.layer.8.attention.self.value.weight', 'l1.encoder.layer.4.output.dense.weight', 'l1.encoder.layer.4.attention.self.value.bias', 'l1.encoder.layer.6.attention.self.value.bias', 'l1.encoder.layer.11.attention.self.query.bias', 'l1.encoder.layer.0.attention.self.key.bias', 'l1.encoder.layer.4.attention.self.query.weight', 'l1.encoder.layer.2.intermediate.dense.weight', 'l1.encoder.layer.11.attention.self.key.weight', 'l1.encoder.layer.0.intermediate.dense.bias', 'l1.encoder.layer.11.attention.output.LayerNorm.bias', 'l1.encoder.layer.8.attention.output.LayerNorm.weight', 'l1.encoder.layer.5.attention.self.query.bias', 'l1.encoder.layer.11.output.dense.weight', 'l1.encoder.layer.10.intermediate.dense.weight', 'l1.encoder.layer.7.attention.self.query.bias', 'l1.encoder.layer.3.attention.self.query.weight', 'l1.encoder.layer.3.attention.self.query.bias', 'l1.encoder.layer.11.intermediate.dense.weight', 'l1.encoder.layer.10.attention.output.LayerNorm.weight', 'l1.encoder.layer.11.attention.output.LayerNorm.weight', 'l1.encoder.layer.11.attention.self.value.weight', 'l1.encoder.layer.3.output.dense.bias', 'l1.encoder.layer.1.intermediate.dense.bias', 'l1.encoder.layer.1.attention.output.LayerNorm.weight', 'l1.encoder.layer.10.output.dense.weight', 'l1.embeddings.position_ids', 'l1.encoder.layer.1.output.dense.weight', 'l1.encoder.layer.9.attention.output.LayerNorm.bias', 'l1.encoder.layer.2.attention.output.LayerNorm.bias', 'l1.encoder.layer.9.attention.self.key.weight', 'l1.encoder.layer.3.attention.output.dense.weight', 'l1.encoder.layer.9.attention.self.query.bias', 'l1.encoder.layer.9.attention.output.dense.weight', 'l1.encoder.layer.9.attention.output.LayerNorm.weight', 'l1.encoder.layer.11.output.dense.bias', 'l1.pooler.dense.weight', 'l1.encoder.layer.5.attention.self.key.bias', 'l1.encoder.layer.6.output.dense.weight', 'l1.encoder.layer.2.attention.self.value.bias', 'l1.encoder.layer.11.intermediate.dense.bias', 'l1.encoder.layer.1.intermediate.dense.weight', 'l1.encoder.layer.4.output.dense.bias', 'l1.encoder.layer.7.output.dense.weight', 'l1.encoder.layer.11.output.LayerNorm.bias', 'l1.encoder.layer.2.intermediate.dense.bias', 'l1.encoder.layer.3.intermediate.dense.weight', 'l1.encoder.layer.9.attention.self.key.bias', 'l1.encoder.layer.0.output.dense.bias', 'l1.encoder.layer.6.intermediate.dense.bias', 'l1.encoder.layer.7.attention.output.dense.weight', 'l1.encoder.layer.8.attention.self.key.bias', 'l1.encoder.layer.11.attention.output.dense.bias', 'l1.encoder.layer.8.attention.output.dense.weight', 'l1.encoder.layer.11.output.LayerNorm.weight', 'l1.encoder.layer.5.attention.output.LayerNorm.weight', 'l1.encoder.layer.0.attention.output.LayerNorm.bias', 'l1.encoder.layer.5.intermediate.dense.weight', 'l1.encoder.layer.8.attention.self.query.bias', 'l1.encoder.layer.10.attention.self.value.bias', 'l1.encoder.layer.5.output.dense.weight', 'l1.encoder.layer.6.attention.self.key.bias', 'l1.encoder.layer.7.attention.self.query.weight', 'l1.encoder.layer.6.output.LayerNorm.bias', 'l1.encoder.layer.2.attention.output.LayerNorm.weight', 'l1.encoder.layer.0.intermediate.dense.weight', 'l1.encoder.layer.8.output.dense.bias', 'l1.encoder.layer.9.intermediate.dense.bias', 'l1.encoder.layer.6.attention.output.LayerNorm.bias', 'l1.encoder.layer.7.attention.output.LayerNorm.weight', 'l1.encoder.layer.4.output.LayerNorm.weight', 'l1.encoder.layer.9.output.LayerNorm.weight', 'l1.encoder.layer.1.output.LayerNorm.bias', 'l1.encoder.layer.3.attention.self.value.bias', 'l1.encoder.layer.1.attention.self.key.bias', 'l1.encoder.layer.6.attention.self.query.weight', 'l1.encoder.layer.2.attention.output.dense.bias', 'l1.encoder.layer.0.attention.self.key.weight', 'l1.encoder.layer.4.attention.self.value.weight', 'l1.encoder.layer.0.output.LayerNorm.weight', 'l1.encoder.layer.6.attention.self.key.weight', 'l1.encoder.layer.0.attention.self.query.weight', 'l1.encoder.layer.11.attention.self.value.bias', 'l1.encoder.layer.5.output.LayerNorm.bias', 'l1.encoder.layer.10.output.dense.bias', 'l1.encoder.layer.2.output.dense.bias', 'l1.encoder.layer.5.attention.self.query.weight', 'l1.encoder.layer.7.attention.output.dense.bias', 'l1.encoder.layer.9.output.dense.bias', 'l1.encoder.layer.2.attention.self.key.weight', 'l1.encoder.layer.2.output.dense.weight', 'l1.encoder.layer.10.intermediate.dense.bias', 'l1.encoder.layer.8.output.LayerNorm.weight', 'l1.encoder.layer.3.output.dense.weight', 'l1.encoder.layer.1.attention.self.query.bias', 'l1.encoder.layer.10.output.LayerNorm.weight', 'l1.encoder.layer.3.output.LayerNorm.bias', 'l1.encoder.layer.7.output.LayerNorm.weight', 'l1.encoder.layer.4.intermediate.dense.bias', 'l1.encoder.layer.9.attention.self.value.bias', 'l1.encoder.layer.7.attention.output.LayerNorm.bias', 'l1.encoder.layer.8.intermediate.dense.weight', 'l1.encoder.layer.2.attention.self.key.bias', 'l1.encoder.layer.4.attention.output.LayerNorm.bias', 'l1.encoder.layer.6.attention.output.dense.bias', 'l1.embeddings.LayerNorm.weight', 'l1.encoder.layer.2.output.LayerNorm.bias', 'l1.encoder.layer.8.output.dense.weight', 'l1.encoder.layer.7.output.LayerNorm.bias', 'l1.encoder.layer.1.output.LayerNorm.weight', 'l1.encoder.layer.0.output.dense.weight', 'l1.encoder.layer.1.attention.output.LayerNorm.bias', 'l1.encoder.layer.10.attention.self.key.weight', 'l1.encoder.layer.9.attention.self.value.weight', 'l1.encoder.layer.6.output.LayerNorm.weight', 'l1.encoder.layer.3.attention.self.key.weight', 'l1.encoder.layer.1.attention.self.key.weight', 'l1.encoder.layer.10.attention.self.query.bias', 'l1.encoder.layer.1.attention.self.value.bias', 'l1.encoder.layer.9.attention.self.query.weight', 'l1.encoder.layer.8.intermediate.dense.bias', 'l1.encoder.layer.0.attention.self.value.bias', 'l1.encoder.layer.4.attention.self.key.weight', 'l1.encoder.layer.0.attention.output.LayerNorm.weight', 'l1.encoder.layer.9.output.LayerNorm.bias', 'l1.encoder.layer.9.output.dense.weight', 'l1.encoder.layer.10.attention.output.LayerNorm.bias', 'l1.encoder.layer.5.attention.self.key.weight', 'l1.encoder.layer.9.intermediate.dense.weight', 'l1.encoder.layer.8.attention.self.value.bias', 'l1.encoder.layer.0.attention.output.dense.bias', 'l1.encoder.layer.2.attention.self.value.weight', 'l1.encoder.layer.5.output.LayerNorm.weight', 'l1.encoder.layer.8.attention.output.dense.bias', 'l1.encoder.layer.3.attention.self.key.bias', 'l1.encoder.layer.6.attention.self.value.weight', 'l1.encoder.layer.3.output.LayerNorm.weight', 'l1.encoder.layer.5.attention.self.value.bias', 'l1.embeddings.token_type_embeddings.weight', 'l1.encoder.layer.3.attention.self.value.weight', 'l1.encoder.layer.5.output.dense.bias', 'l1.encoder.layer.7.intermediate.dense.weight', 'l1.pooler.dense.bias', 'l1.encoder.layer.5.attention.self.value.weight', 'l1.encoder.layer.4.output.LayerNorm.bias', 'l1.encoder.layer.2.output.LayerNorm.weight', 'l1.encoder.layer.1.attention.self.query.weight', 'l1.encoder.layer.3.attention.output.LayerNorm.bias', 'l1.encoder.layer.5.attention.output.dense.weight', 'l1.encoder.layer.4.attention.self.key.bias', 'l1.encoder.layer.5.attention.output.dense.bias', 'l1.encoder.layer.6.attention.output.LayerNorm.weight', 'l1.encoder.layer.10.attention.self.query.weight', 'l1.encoder.layer.10.attention.output.dense.bias', 'l1.encoder.layer.10.attention.self.key.bias']
- This IS expected if you are initializing RobertaForSequenceClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaForSequenceClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of RobertaForSequenceClassification were not initialized from the model checkpoint at maxpe/bertin-roberta-base-spanish_semeval18_emodetection and are newly initialized: ['encoder.layer.10.attention.self.value.weight', 'encoder.layer.9.attention.output.LayerNorm.bias', 'encoder.layer.9.intermediate.dense.bias', 'embeddings.position_embeddings.weight', 'encoder.layer.0.output.LayerNorm.weight', 'embeddings.token_type_embeddings.weight', 'encoder.layer.5.output.LayerNorm.weight', 'encoder.layer.10.attention.self.value.bias', 'encoder.layer.10.intermediate.dense.weight', 'encoder.layer.8.intermediate.dense.weight', 'encoder.layer.4.attention.self.value.bias', 'encoder.layer.3.output.LayerNorm.weight', 'encoder.layer.0.attention.self.value.bias', 'encoder.layer.4.output.dense.weight', 'encoder.layer.0.output.dense.bias', 'encoder.layer.2.attention.self.key.bias', 'encoder.layer.8.attention.output.LayerNorm.weight', 'encoder.layer.11.attention.output.LayerNorm.weight', 'encoder.layer.9.attention.self.key.bias', 'encoder.layer.4.output.LayerNorm.bias', 'encoder.layer.10.output.dense.bias', 'encoder.layer.3.intermediate.dense.weight', 'encoder.layer.3.intermediate.dense.bias', 'encoder.layer.6.intermediate.dense.bias', 'classifier.dense.bias', 'encoder.layer.8.attention.self.key.bias', 'encoder.layer.1.attention.output.dense.bias', 'encoder.layer.8.attention.output.dense.weight', 'encoder.layer.5.attention.output.dense.bias', 'encoder.layer.5.attention.self.value.weight', 'encoder.layer.1.attention.self.query.weight', 'encoder.layer.2.output.dense.bias', 'encoder.layer.5.intermediate.dense.bias', 'encoder.layer.1.attention.self.key.bias', 'encoder.layer.6.attention.self.value.weight', 'encoder.layer.9.attention.output.dense.bias', 'encoder.layer.7.intermediate.dense.weight', 'encoder.layer.11.attention.self.key.weight', 'encoder.layer.1.output.dense.bias', 'encoder.layer.1.output.LayerNorm.bias', 'encoder.layer.6.attention.self.value.bias', 'encoder.layer.11.attention.self.value.bias', 'encoder.layer.9.output.LayerNorm.bias', 'encoder.layer.7.output.dense.weight', 'encoder.layer.2.attention.output.LayerNorm.bias', 'encoder.layer.5.attention.self.value.bias', 'encoder.layer.8.attention.self.value.weight', 'encoder.layer.7.attention.output.dense.bias', 'encoder.layer.4.intermediate.dense.bias', 'encoder.layer.8.intermediate.dense.bias', 'encoder.layer.9.output.dense.bias', 'classifier.out_proj.weight', 'encoder.layer.2.attention.self.query.bias', 'encoder.layer.8.attention.output.LayerNorm.bias', 'encoder.layer.0.output.dense.weight', 'encoder.layer.3.attention.output.dense.weight', 'encoder.layer.11.attention.self.value.weight', 'encoder.layer.6.attention.output.LayerNorm.weight', 'encoder.layer.1.attention.self.value.weight', 'encoder.layer.3.attention.self.query.weight', 'encoder.layer.4.attention.output.dense.bias', 'encoder.layer.1.attention.output.LayerNorm.bias', 'encoder.layer.10.output.LayerNorm.weight', 'encoder.layer.2.output.dense.weight', 'encoder.layer.3.output.dense.bias', 'encoder.layer.2.intermediate.dense.weight', 'encoder.layer.6.output.dense.bias', 'encoder.layer.9.attention.output.LayerNorm.weight', 'classifier.out_proj.bias', 'encoder.layer.7.attention.output.LayerNorm.weight', 'encoder.layer.3.output.LayerNorm.bias', 'encoder.layer.5.attention.output.LayerNorm.bias', 'encoder.layer.11.attention.self.key.bias', 'encoder.layer.11.attention.output.dense.weight', 'encoder.layer.3.attention.output.dense.bias', 'encoder.layer.8.output.dense.weight', 'encoder.layer.7.attention.self.value.bias', 'encoder.layer.4.attention.self.value.weight', 'encoder.layer.6.attention.output.dense.weight', 'encoder.layer.0.attention.self.query.bias', 'encoder.layer.3.attention.self.value.bias', 'encoder.layer.11.output.LayerNorm.bias', 'encoder.layer.11.attention.self.query.weight', 'encoder.layer.2.attention.output.dense.bias', 'embeddings.LayerNorm.bias', 'encoder.layer.4.output.dense.bias', 'encoder.layer.0.attention.self.value.weight', 'encoder.layer.10.output.dense.weight', 'encoder.layer.2.attention.self.value.bias', 'encoder.layer.11.intermediate.dense.weight', 'encoder.layer.11.output.dense.weight', 'encoder.layer.2.attention.output.LayerNorm.weight', 'encoder.layer.10.attention.output.LayerNorm.weight', 'encoder.layer.8.attention.self.value.bias', 'encoder.layer.7.output.dense.bias', 'encoder.layer.6.output.LayerNorm.bias', 'encoder.layer.10.intermediate.dense.bias', 'embeddings.word_embeddings.weight', 'classifier.dense.weight', 'encoder.layer.8.output.LayerNorm.bias', 'encoder.layer.10.output.LayerNorm.bias', 'encoder.layer.5.output.dense.weight', 'encoder.layer.2.attention.self.query.weight', 'encoder.layer.5.attention.output.dense.weight', 'encoder.layer.9.attention.self.query.weight', 'encoder.layer.0.intermediate.dense.bias', 'encoder.layer.5.output.dense.bias', 'encoder.layer.0.intermediate.dense.weight', 'encoder.layer.9.attention.self.value.bias', 'encoder.layer.8.attention.self.key.weight', 'encoder.layer.0.attention.output.LayerNorm.weight', 'encoder.layer.2.output.LayerNorm.weight', 'encoder.layer.7.attention.self.value.weight', 'encoder.layer.6.attention.self.query.bias', 'encoder.layer.7.attention.output.LayerNorm.bias', 'encoder.layer.9.output.LayerNorm.weight', 'encoder.layer.11.output.dense.bias', 'encoder.layer.1.output.dense.weight', 'encoder.layer.0.attention.output.dense.bias', 'encoder.layer.7.attention.self.query.bias', 'encoder.layer.8.attention.output.dense.bias', 'encoder.layer.9.attention.self.query.bias', 'encoder.layer.3.attention.self.query.bias', 'encoder.layer.9.attention.self.value.weight', 'encoder.layer.6.attention.output.LayerNorm.bias', 'encoder.layer.8.output.dense.bias', 'encoder.layer.0.attention.self.query.weight', 'encoder.layer.3.output.dense.weight', 'encoder.layer.4.attention.output.dense.weight', 'encoder.layer.5.attention.self.query.weight', 'encoder.layer.4.attention.self.query.weight', 'encoder.layer.3.attention.self.key.weight', 'encoder.layer.1.intermediate.dense.bias', 'encoder.layer.1.attention.output.dense.weight', 'encoder.layer.3.attention.self.key.bias', 'encoder.layer.5.attention.self.key.weight', 'encoder.layer.9.output.dense.weight', 'encoder.layer.10.attention.self.key.weight', 'encoder.layer.7.output.LayerNorm.bias', 'encoder.layer.3.attention.output.LayerNorm.bias', 'encoder.layer.0.output.LayerNorm.bias', 'encoder.layer.10.attention.self.key.bias', 'encoder.layer.4.attention.self.key.bias', 'encoder.layer.11.attention.self.query.bias', 'encoder.layer.2.output.LayerNorm.bias', 'encoder.layer.5.attention.self.query.bias', 'encoder.layer.7.attention.output.dense.weight', 'encoder.layer.1.attention.self.value.bias', 'encoder.layer.7.attention.self.query.weight', 'encoder.layer.10.attention.self.query.bias', 'encoder.layer.8.output.LayerNorm.weight', 'encoder.layer.4.attention.output.LayerNorm.bias', 'encoder.layer.11.output.LayerNorm.weight', 'encoder.layer.6.output.dense.weight', 'encoder.layer.3.attention.self.value.weight', 'encoder.layer.7.output.LayerNorm.weight', 'encoder.layer.1.attention.output.LayerNorm.weight', 'encoder.layer.9.attention.self.key.weight', 'encoder.layer.0.attention.output.LayerNorm.bias', 'encoder.layer.5.intermediate.dense.weight', 'encoder.layer.4.attention.self.key.weight', 'encoder.layer.5.attention.self.key.bias', 'encoder.layer.11.intermediate.dense.bias', 'encoder.layer.5.attention.output.LayerNorm.weight', 'encoder.layer.4.attention.self.query.bias', 'encoder.layer.10.attention.output.dense.weight', 'encoder.layer.11.attention.output.dense.bias', 'encoder.layer.6.attention.self.key.weight', 'encoder.layer.6.output.LayerNorm.weight', 'embeddings.LayerNorm.weight', 'encoder.layer.7.intermediate.dense.bias', 'encoder.layer.4.attention.output.LayerNorm.weight', 'encoder.layer.1.attention.self.query.bias', 'encoder.layer.6.attention.self.query.weight', 'encoder.layer.10.attention.output.LayerNorm.bias', 'encoder.layer.10.attention.self.query.weight', 'encoder.layer.6.intermediate.dense.weight', 'encoder.layer.10.attention.output.dense.bias', 'encoder.layer.8.attention.self.query.bias', 'encoder.layer.2.attention.self.key.weight', 'encoder.layer.5.output.LayerNorm.bias', 'encoder.layer.6.attention.self.key.bias', 'encoder.layer.7.attention.self.key.weight', 'encoder.layer.2.attention.output.dense.weight', 'encoder.layer.6.attention.output.dense.bias', 'encoder.layer.1.intermediate.dense.weight', 'encoder.layer.7.attention.self.key.bias', 'encoder.layer.4.output.LayerNorm.weight', 'encoder.layer.4.intermediate.dense.weight', 'encoder.layer.2.intermediate.dense.bias', 'encoder.layer.11.attention.output.LayerNorm.bias', 'encoder.layer.0.attention.self.key.weight', 'encoder.layer.2.attention.self.value.weight', 'encoder.layer.0.attention.output.dense.weight', 'encoder.layer.1.attention.self.key.weight', 'encoder.layer.9.intermediate.dense.weight', 'encoder.layer.0.attention.self.key.bias', 'encoder.layer.1.output.LayerNorm.weight', 'encoder.layer.3.attention.output.LayerNorm.weight', 'encoder.layer.8.attention.self.query.weight', 'encoder.layer.9.attention.output.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Using custom data configuration default-bdf2d38ff4c39ebf
Reusing dataset csv (/root/.cache/huggingface/datasets/csv/default-bdf2d38ff4c39ebf/0.0.0/51cce309a08df9c4d82ffd9363bbe090bf173197fc01a71b034e8594995a1a58)
100%
3/3 [00:00<00:00, 31.28it/s]
loading file https://huggingface.co/bertin-project/bertin-roberta-base-spanish/resolve/main/vocab.json from cache at /root/.cache/huggingface/transformers/f47efb87887425ef9a4ef795bfaa907d57ac9a650d733c7ca621b9eced3235e8.0b968504b15b2f5e6e9e491723f31987782cb976064aff9a7c6188cc2d5ce8bc
loading file https://huggingface.co/bertin-project/bertin-roberta-base-spanish/resolve/main/merges.txt from cache at /root/.cache/huggingface/transformers/aba9e0895dea47dd4208a36012ffd3eb21eb4c5f7ce0be6547afb37cdd4ddef4.0d24ae8bd5fabb1f5020f91bc602cefeb5a2938ab77e21769d28776345634b23
loading file https://huggingface.co/bertin-project/bertin-roberta-base-spanish/resolve/main/tokenizer.json from cache at /root/.cache/huggingface/transformers/baad57d0f574d3e660cafb14601d0ecebe83f25071d59f3e51d225d75285b773.23862d4cf295978aaf1f42b721fda2d8ece45b112d21f0c83905e5b05454e440
loading file https://huggingface.co/bertin-project/bertin-roberta-base-spanish/resolve/main/added_tokens.json from cache at None
loading file https://huggingface.co/bertin-project/bertin-roberta-base-spanish/resolve/main/special_tokens_map.json from cache at /root/.cache/huggingface/transformers/68d1fdfe72fdcac403d8f363239c379d8125162f50a954030c4476982f88d69e.cb2244924ab24d706b02fd7fcedaea4531566537687a539ebb94db511fd122a0
loading file https://huggingface.co/bertin-project/bertin-roberta-base-spanish/resolve/main/tokenizer_config.json from cache at /root/.cache/huggingface/transformers/72bf61c243630a112d8fa8c8d9162f1a5e01fab0602d2f2a7792cecdc0a4986f.a92abca7d07376fc2376db92d7f060b988d915ef9b2981c5616603a86c340fa0
100%
17/17 [00:04<00:00, 4.47ba/s]
100%
14/14 [00:05<00:00, 2.68ba/s]
100%
1/1 [00:00<00:00, 12.52ba/s]
PyTorch: setting up devices
The default value for the training argument `--report_to` will change in v5 (from all installed integrations to none). In v5, you will need to use `--report_to all` to get the same behavior as now. You should start updating your code and make this info disappear :-).
The following columns in the training set don't have a corresponding argument in `RobertaForSequenceClassification.forward` and have been ignored: comment, comment_id, influencer_gender, media, influencer. If comment, comment_id, influencer_gender, media, influencer are not expected by `RobertaForSequenceClassification.forward`,  you can safely ignore this message.
/usr/local/lib/python3.7/dist-packages/transformers/optimization.py:310: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  FutureWarning,
***** Running training *****
  Num examples = 16710
  Num Epochs = 5
  Instantaneous batch size per device = 8
  Total train batch size (w. parallel, distributed & accumulation) = 8
  Gradient Accumulation steps = 1
  Total optimization steps = 10445
{'loss': 0.6324, 'learning_rate': 2.417758015391837e-06, 'epoch': 0.24}
{'loss': 0.6056, 'learning_rate': 2.2962015540850574e-06, 'epoch': 0.48}
{'loss': 0.5854, 'learning_rate': 2.1746450927782784e-06, 'epoch': 0.72}
{'loss': 0.559, 'learning_rate': 2.053088631471499e-06, 'epoch': 0.96}
The following columns in the evaluation set don't have a corresponding argument in `RobertaForSequenceClassification.forward` and have been ignored: comment, comment_id, influencer_gender, media, influencer. If comment, comment_id, influencer_gender, media, influencer are not expected by `RobertaForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 100
  Batch size = 8
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Saving model checkpoint to ./testBertinTwitter/1/checkpoint-2089
Configuration saved in ./testBertinTwitter/1/checkpoint-2089/config.json
{'eval_loss': 1.0522997379302979, 'eval_maf': 0.23254870129870128, 'eval_map': 0.2222222222222222, 'eval_mar': 0.2649147727272727, 'eval_mif': 0.64, 'eval_mip': 0.64, 'eval_mir': 0.64, 'eval_avgf': 0.5428246753246753, 'eval_avgp': 0.48488888888888887, 'eval_avgr': 0.64, 'eval_mse': 1.34, 'eval_runtime': 3.0204, 'eval_samples_per_second': 33.108, 'eval_steps_per_second': 4.304, 'learning_rate': 2.031451581358893e-06, 'epoch': 1.0}
Model weights saved in ./testBertinTwitter/1/checkpoint-2089/pytorch_model.bin
tokenizer config file saved in ./testBertinTwitter/1/checkpoint-2089/tokenizer_config.json
Special tokens file saved in ./testBertinTwitter/1/checkpoint-2089/special_tokens_map.json
{'loss': 0.5626, 'learning_rate': 1.9315321701647205e-06, 'epoch': 1.2}
{'loss': 0.5587, 'learning_rate': 1.8099757088579413e-06, 'epoch': 1.44}
{'loss': 0.5291, 'learning_rate': 1.688419247551162e-06, 'epoch': 1.68}
{'loss': 0.5331, 'learning_rate': 1.5668627862443829e-06, 'epoch': 1.91}
The following columns in the evaluation set don't have a corresponding argument in `RobertaForSequenceClassification.forward` and have been ignored: comment, comment_id, influencer_gender, media, influencer. If comment, comment_id, influencer_gender, media, influencer are not expected by `RobertaForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 100
  Batch size = 8
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Saving model checkpoint to ./testBertinTwitter/1/checkpoint-4178
Configuration saved in ./testBertinTwitter/1/checkpoint-4178/config.json
{'eval_loss': 1.0500863790512085, 'eval_maf': 0.39654225287636957, 'eval_map': 0.5114942528735632, 'eval_mar': 0.37627840909090904, 'eval_mif': 0.69, 'eval_mip': 0.69, 'eval_mir': 0.69, 'eval_avgf': 0.6252864162114322, 'eval_avgp': 0.6294252873563219, 'eval_avgr': 0.69, 'eval_mse': 1.1, 'eval_runtime': 3.0353, 'eval_samples_per_second': 32.946, 'eval_steps_per_second': 4.283, 'learning_rate': 1.5235886860191694e-06, 'epoch': 2.0}
Model weights saved in ./testBertinTwitter/1/checkpoint-4178/pytorch_model.bin
tokenizer config file saved in ./testBertinTwitter/1/checkpoint-4178/tokenizer_config.json
Special tokens file saved in ./testBertinTwitter/1/checkpoint-4178/special_tokens_map.json
{'loss': 0.502, 'learning_rate': 1.4453063249376037e-06, 'epoch': 2.15}
{'loss': 0.4843, 'learning_rate': 1.3237498636308245e-06, 'epoch': 2.39}
{'loss': 0.5025, 'learning_rate': 1.2021934023240455e-06, 'epoch': 2.63}
{'loss': 0.4927, 'learning_rate': 1.0806369410172663e-06, 'epoch': 2.87}
The following columns in the evaluation set don't have a corresponding argument in `RobertaForSequenceClassification.forward` and have been ignored: comment, comment_id, influencer_gender, media, influencer. If comment, comment_id, influencer_gender, media, influencer are not expected by `RobertaForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 100
  Batch size = 8
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Saving model checkpoint to ./testBertinTwitter/1/checkpoint-6267
Configuration saved in ./testBertinTwitter/1/checkpoint-6267/config.json
{'eval_loss': 1.1653140783309937, 'eval_maf': 0.4183870967741936, 'eval_map': 0.5106589147286822, 'eval_mar': 0.39737215909090906, 'eval_mif': 0.69, 'eval_mip': 0.69, 'eval_mir': 0.69, 'eval_avgf': 0.6297806451612904, 'eval_avgp': 0.6272868217054264, 'eval_avgr': 0.69, 'eval_mse': 1.05, 'eval_runtime': 3.0158, 'eval_samples_per_second': 33.159, 'eval_steps_per_second': 4.311, 'learning_rate': 1.0157257906794465e-06, 'epoch': 3.0}
Model weights saved in ./testBertinTwitter/1/checkpoint-6267/pytorch_model.bin
tokenizer config file saved in ./testBertinTwitter/1/checkpoint-6267/tokenizer_config.json
Special tokens file saved in ./testBertinTwitter/1/checkpoint-6267/special_tokens_map.json
{'loss': 0.4601, 'learning_rate': 9.590804797104873e-07, 'epoch': 3.11}
{'loss': 0.4701, 'learning_rate': 8.375240184037081e-07, 'epoch': 3.35}
{'loss': 0.4507, 'learning_rate': 7.159675570969291e-07, 'epoch': 3.59}
{'loss': 0.4493, 'learning_rate': 5.944110957901499e-07, 'epoch': 3.83}
The following columns in the evaluation set don't have a corresponding argument in `RobertaForSequenceClassification.forward` and have been ignored: comment, comment_id, influencer_gender, media, influencer. If comment, comment_id, influencer_gender, media, influencer are not expected by `RobertaForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 100
  Batch size = 8
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Saving model checkpoint to ./testBertinTwitter/1/checkpoint-8356
Configuration saved in ./testBertinTwitter/1/checkpoint-8356/config.json
{'eval_loss': 1.2538856267929077, 'eval_maf': 0.4018073200241984, 'eval_map': 0.494724025974026, 'eval_mar': 0.3860085227272727, 'eval_mif': 0.68, 'eval_mip': 0.68, 'eval_mir': 0.68, 'eval_avgf': 0.6106957047791893, 'eval_avgp': 0.6064935064935065, 'eval_avgr': 0.68, 'eval_mse': 1.01, 'eval_runtime': 3.0254, 'eval_samples_per_second': 33.054, 'eval_steps_per_second': 4.297, 'learning_rate': 5.078628953397232e-07, 'epoch': 4.0}
Model weights saved in ./testBertinTwitter/1/checkpoint-8356/pytorch_model.bin
tokenizer config file saved in ./testBertinTwitter/1/checkpoint-8356/tokenizer_config.json
Special tokens file saved in ./testBertinTwitter/1/checkpoint-8356/special_tokens_map.json


Training completed. Do not forget to share your model on huggingface.co/models =)


Loading best model from ./testBertinTwitter/1/checkpoint-4178 (score: 1.0500863790512085).
The following columns in the evaluation set don't have a corresponding argument in `RobertaForSequenceClassification.forward` and have been ignored: comment, comment_id, influencer_gender, media, influencer. If comment, comment_id, influencer_gender, media, influencer are not expected by `RobertaForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 100
  Batch size = 8
{'train_runtime': 6164.8532, 'train_samples_per_second': 13.553, 'train_steps_per_second': 1.694, 'train_loss': 0.5204908152754196, 'learning_rate': 5.078628953397232e-07, 'epoch': 4.0}
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
[I 2022-07-17 03:53:39,092] Trial 1 finished with value: 0.5204908152754196 and parameters: {'learning_rate': 2.539314476698616e-06, 'weight_decay': 0.0019230698333770092, 'per_device_train_batch_size': 8}. Best is trial 1 with value: 0.5204908152754196.
{'eval_loss': 1.0500863790512085, 'eval_maf': 0.39654225287636957, 'eval_map': 0.5114942528735632, 'eval_mar': 0.37627840909090904, 'eval_mif': 0.69, 'eval_mip': 0.69, 'eval_mir': 0.69, 'eval_avgf': 0.6252864162114322, 'eval_avgp': 0.6294252873563219, 'eval_avgr': 0.69, 'eval_mse': 1.1, 'eval_runtime': 3.0639, 'eval_samples_per_second': 32.638, 'eval_steps_per_second': 4.243, 'learning_rate': 5.078628953397232e-07, 'epoch': 4.0}
loading configuration file https://huggingface.co/maxpe/bertin-roberta-base-spanish_semeval18_emodetection/resolve/main/config.json from cache at /root/.cache/huggingface/transformers/d4f1002ff603556d7da9b1dcc4f60837cb7b95475014ed3dca46003df9e5e073.3e6584dcdee85903ac728aeaf3e164cbeb7221cab9b7b326e24422b622ae0ef6
Model config RobertaConfig {
  "_name_or_path": "maxpe/bertin-roberta-base-spanish_semeval18_emodetection",
  "architectures": [
    "RobertaForSequenceClassification"
  ],
  "attention_probs_dropout_prob": 0.1,
  "bos_token_id": 0,
  "classifier_dropout": null,
  "eos_token_id": 2,
  "gradient_checkpointing": false,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "id2label": {
    "0": "LABEL_0",
    "1": "LABEL_1",
    "2": "LABEL_2",
    "3": "LABEL_3"
  },
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "label2id": {
    "LABEL_0": 0,
    "LABEL_1": 1,
    "LABEL_2": 2,
    "LABEL_3": 3
  },
  "layer_norm_eps": 1e-05,
  "max_position_embeddings": 514,
  "model_type": "roberta",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 1,
  "position_embedding_type": "absolute",
  "problem_type": "multi_label_classification",
  "transformers_version": "4.20.1",
  "type_vocab_size": 1,
  "use_cache": true,
  "vocab_size": 50265
}

loading weights file https://huggingface.co/maxpe/bertin-roberta-base-spanish_semeval18_emodetection/resolve/main/pytorch_model.bin from cache at /root/.cache/huggingface/transformers/d900c79ff1498657eb796142ec4f35629e79499bc87fff9f3226694959c66fc9.35439f36ce44b15b9d01b0b86490d9df3be95efe408acf4f3f724e10a60defb0
Some weights of the model checkpoint at maxpe/bertin-roberta-base-spanish_semeval18_emodetection were not used when initializing RobertaForSequenceClassification: ['l1.encoder.layer.11.attention.output.dense.weight', 'l1.encoder.layer.7.intermediate.dense.bias', 'l1.embeddings.position_embeddings.weight', 'l1.encoder.layer.0.attention.output.dense.weight', 'l1.encoder.layer.2.attention.self.query.bias', 'l1.encoder.layer.4.attention.output.dense.weight', 'l1.encoder.layer.6.output.dense.bias', 'l1.encoder.layer.6.attention.self.query.bias', 'l1.encoder.layer.10.attention.self.value.weight', 'l1.encoder.layer.7.attention.self.key.weight', 'l1.encoder.layer.7.attention.self.value.weight', 'l1.encoder.layer.5.intermediate.dense.bias', 'l1.encoder.layer.1.output.dense.bias', 'l1.encoder.layer.0.attention.self.query.bias', 'l1.encoder.layer.6.intermediate.dense.weight', 'l1.encoder.layer.7.output.dense.bias', 'l1.encoder.layer.1.attention.self.value.weight', 'l1.encoder.layer.3.attention.output.dense.bias', 'l1.encoder.layer.10.output.LayerNorm.bias', 'l1.encoder.layer.4.intermediate.dense.weight', 'l1.encoder.layer.11.attention.self.query.weight', 'l1.encoder.layer.7.attention.self.value.bias', 'l1.encoder.layer.3.attention.output.LayerNorm.weight', 'l1.encoder.layer.3.intermediate.dense.bias', 'l1.encoder.layer.0.output.LayerNorm.bias', 'l1.encoder.layer.7.attention.self.key.bias', 'l1.encoder.layer.1.attention.output.dense.weight', 'l1.encoder.layer.8.attention.self.key.weight', 'l1.encoder.layer.4.attention.output.dense.bias', 'l1.encoder.layer.6.attention.output.dense.weight', 'l1.encoder.layer.9.attention.output.dense.bias', 'l1.encoder.layer.8.attention.self.query.weight', 'l1.encoder.layer.1.attention.output.dense.bias', 'l1.encoder.layer.0.attention.self.value.weight', 'l1.encoder.layer.5.attention.output.LayerNorm.bias', 'l1.encoder.layer.4.attention.self.query.bias', 'l1.encoder.layer.10.attention.output.dense.weight', 'l1.encoder.layer.8.attention.output.LayerNorm.bias', 'l1.encoder.layer.2.attention.output.dense.weight', 'l1.encoder.layer.8.output.LayerNorm.bias', 'l1.embeddings.LayerNorm.bias', 'l1.encoder.layer.4.attention.output.LayerNorm.weight', 'l3.weight', 'l1.embeddings.word_embeddings.weight', 'l1.encoder.layer.11.attention.self.key.bias', 'l3.bias', 'l1.encoder.layer.2.attention.self.query.weight', 'l1.encoder.layer.8.attention.self.value.weight', 'l1.encoder.layer.4.output.dense.weight', 'l1.encoder.layer.4.attention.self.value.bias', 'l1.encoder.layer.6.attention.self.value.bias', 'l1.encoder.layer.11.attention.self.query.bias', 'l1.encoder.layer.0.attention.self.key.bias', 'l1.encoder.layer.4.attention.self.query.weight', 'l1.encoder.layer.2.intermediate.dense.weight', 'l1.encoder.layer.11.attention.self.key.weight', 'l1.encoder.layer.0.intermediate.dense.bias', 'l1.encoder.layer.11.attention.output.LayerNorm.bias', 'l1.encoder.layer.8.attention.output.LayerNorm.weight', 'l1.encoder.layer.5.attention.self.query.bias', 'l1.encoder.layer.11.output.dense.weight', 'l1.encoder.layer.10.intermediate.dense.weight', 'l1.encoder.layer.7.attention.self.query.bias', 'l1.encoder.layer.3.attention.self.query.weight', 'l1.encoder.layer.3.attention.self.query.bias', 'l1.encoder.layer.11.intermediate.dense.weight', 'l1.encoder.layer.10.attention.output.LayerNorm.weight', 'l1.encoder.layer.11.attention.output.LayerNorm.weight', 'l1.encoder.layer.11.attention.self.value.weight', 'l1.encoder.layer.3.output.dense.bias', 'l1.encoder.layer.1.intermediate.dense.bias', 'l1.encoder.layer.1.attention.output.LayerNorm.weight', 'l1.encoder.layer.10.output.dense.weight', 'l1.embeddings.position_ids', 'l1.encoder.layer.1.output.dense.weight', 'l1.encoder.layer.9.attention.output.LayerNorm.bias', 'l1.encoder.layer.2.attention.output.LayerNorm.bias', 'l1.encoder.layer.9.attention.self.key.weight', 'l1.encoder.layer.3.attention.output.dense.weight', 'l1.encoder.layer.9.attention.self.query.bias', 'l1.encoder.layer.9.attention.output.dense.weight', 'l1.encoder.layer.9.attention.output.LayerNorm.weight', 'l1.encoder.layer.11.output.dense.bias', 'l1.pooler.dense.weight', 'l1.encoder.layer.5.attention.self.key.bias', 'l1.encoder.layer.6.output.dense.weight', 'l1.encoder.layer.2.attention.self.value.bias', 'l1.encoder.layer.11.intermediate.dense.bias', 'l1.encoder.layer.1.intermediate.dense.weight', 'l1.encoder.layer.4.output.dense.bias', 'l1.encoder.layer.7.output.dense.weight', 'l1.encoder.layer.11.output.LayerNorm.bias', 'l1.encoder.layer.2.intermediate.dense.bias', 'l1.encoder.layer.3.intermediate.dense.weight', 'l1.encoder.layer.9.attention.self.key.bias', 'l1.encoder.layer.0.output.dense.bias', 'l1.encoder.layer.6.intermediate.dense.bias', 'l1.encoder.layer.7.attention.output.dense.weight', 'l1.encoder.layer.8.attention.self.key.bias', 'l1.encoder.layer.11.attention.output.dense.bias', 'l1.encoder.layer.8.attention.output.dense.weight', 'l1.encoder.layer.11.output.LayerNorm.weight', 'l1.encoder.layer.5.attention.output.LayerNorm.weight', 'l1.encoder.layer.0.attention.output.LayerNorm.bias', 'l1.encoder.layer.5.intermediate.dense.weight', 'l1.encoder.layer.8.attention.self.query.bias', 'l1.encoder.layer.10.attention.self.value.bias', 'l1.encoder.layer.5.output.dense.weight', 'l1.encoder.layer.6.attention.self.key.bias', 'l1.encoder.layer.7.attention.self.query.weight', 'l1.encoder.layer.6.output.LayerNorm.bias', 'l1.encoder.layer.2.attention.output.LayerNorm.weight', 'l1.encoder.layer.0.intermediate.dense.weight', 'l1.encoder.layer.8.output.dense.bias', 'l1.encoder.layer.9.intermediate.dense.bias', 'l1.encoder.layer.6.attention.output.LayerNorm.bias', 'l1.encoder.layer.7.attention.output.LayerNorm.weight', 'l1.encoder.layer.4.output.LayerNorm.weight', 'l1.encoder.layer.9.output.LayerNorm.weight', 'l1.encoder.layer.1.output.LayerNorm.bias', 'l1.encoder.layer.3.attention.self.value.bias', 'l1.encoder.layer.1.attention.self.key.bias', 'l1.encoder.layer.6.attention.self.query.weight', 'l1.encoder.layer.2.attention.output.dense.bias', 'l1.encoder.layer.0.attention.self.key.weight', 'l1.encoder.layer.4.attention.self.value.weight', 'l1.encoder.layer.0.output.LayerNorm.weight', 'l1.encoder.layer.6.attention.self.key.weight', 'l1.encoder.layer.0.attention.self.query.weight', 'l1.encoder.layer.11.attention.self.value.bias', 'l1.encoder.layer.5.output.LayerNorm.bias', 'l1.encoder.layer.10.output.dense.bias', 'l1.encoder.layer.2.output.dense.bias', 'l1.encoder.layer.5.attention.self.query.weight', 'l1.encoder.layer.7.attention.output.dense.bias', 'l1.encoder.layer.9.output.dense.bias', 'l1.encoder.layer.2.attention.self.key.weight', 'l1.encoder.layer.2.output.dense.weight', 'l1.encoder.layer.10.intermediate.dense.bias', 'l1.encoder.layer.8.output.LayerNorm.weight', 'l1.encoder.layer.3.output.dense.weight', 'l1.encoder.layer.1.attention.self.query.bias', 'l1.encoder.layer.10.output.LayerNorm.weight', 'l1.encoder.layer.3.output.LayerNorm.bias', 'l1.encoder.layer.7.output.LayerNorm.weight', 'l1.encoder.layer.4.intermediate.dense.bias', 'l1.encoder.layer.9.attention.self.value.bias', 'l1.encoder.layer.7.attention.output.LayerNorm.bias', 'l1.encoder.layer.8.intermediate.dense.weight', 'l1.encoder.layer.2.attention.self.key.bias', 'l1.encoder.layer.4.attention.output.LayerNorm.bias', 'l1.encoder.layer.6.attention.output.dense.bias', 'l1.embeddings.LayerNorm.weight', 'l1.encoder.layer.2.output.LayerNorm.bias', 'l1.encoder.layer.8.output.dense.weight', 'l1.encoder.layer.7.output.LayerNorm.bias', 'l1.encoder.layer.1.output.LayerNorm.weight', 'l1.encoder.layer.0.output.dense.weight', 'l1.encoder.layer.1.attention.output.LayerNorm.bias', 'l1.encoder.layer.10.attention.self.key.weight', 'l1.encoder.layer.9.attention.self.value.weight', 'l1.encoder.layer.6.output.LayerNorm.weight', 'l1.encoder.layer.3.attention.self.key.weight', 'l1.encoder.layer.1.attention.self.key.weight', 'l1.encoder.layer.10.attention.self.query.bias', 'l1.encoder.layer.1.attention.self.value.bias', 'l1.encoder.layer.9.attention.self.query.weight', 'l1.encoder.layer.8.intermediate.dense.bias', 'l1.encoder.layer.0.attention.self.value.bias', 'l1.encoder.layer.4.attention.self.key.weight', 'l1.encoder.layer.0.attention.output.LayerNorm.weight', 'l1.encoder.layer.9.output.LayerNorm.bias', 'l1.encoder.layer.9.output.dense.weight', 'l1.encoder.layer.10.attention.output.LayerNorm.bias', 'l1.encoder.layer.5.attention.self.key.weight', 'l1.encoder.layer.9.intermediate.dense.weight', 'l1.encoder.layer.8.attention.self.value.bias', 'l1.encoder.layer.0.attention.output.dense.bias', 'l1.encoder.layer.2.attention.self.value.weight', 'l1.encoder.layer.5.output.LayerNorm.weight', 'l1.encoder.layer.8.attention.output.dense.bias', 'l1.encoder.layer.3.attention.self.key.bias', 'l1.encoder.layer.6.attention.self.value.weight', 'l1.encoder.layer.3.output.LayerNorm.weight', 'l1.encoder.layer.5.attention.self.value.bias', 'l1.embeddings.token_type_embeddings.weight', 'l1.encoder.layer.3.attention.self.value.weight', 'l1.encoder.layer.5.output.dense.bias', 'l1.encoder.layer.7.intermediate.dense.weight', 'l1.pooler.dense.bias', 'l1.encoder.layer.5.attention.self.value.weight', 'l1.encoder.layer.4.output.LayerNorm.bias', 'l1.encoder.layer.2.output.LayerNorm.weight', 'l1.encoder.layer.1.attention.self.query.weight', 'l1.encoder.layer.3.attention.output.LayerNorm.bias', 'l1.encoder.layer.5.attention.output.dense.weight', 'l1.encoder.layer.4.attention.self.key.bias', 'l1.encoder.layer.5.attention.output.dense.bias', 'l1.encoder.layer.6.attention.output.LayerNorm.weight', 'l1.encoder.layer.10.attention.self.query.weight', 'l1.encoder.layer.10.attention.output.dense.bias', 'l1.encoder.layer.10.attention.self.key.bias']
- This IS expected if you are initializing RobertaForSequenceClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaForSequenceClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of RobertaForSequenceClassification were not initialized from the model checkpoint at maxpe/bertin-roberta-base-spanish_semeval18_emodetection and are newly initialized: ['encoder.layer.10.attention.self.value.weight', 'encoder.layer.9.attention.output.LayerNorm.bias', 'encoder.layer.9.intermediate.dense.bias', 'embeddings.position_embeddings.weight', 'encoder.layer.0.output.LayerNorm.weight', 'embeddings.token_type_embeddings.weight', 'encoder.layer.5.output.LayerNorm.weight', 'encoder.layer.10.attention.self.value.bias', 'encoder.layer.10.intermediate.dense.weight', 'encoder.layer.8.intermediate.dense.weight', 'encoder.layer.4.attention.self.value.bias', 'encoder.layer.3.output.LayerNorm.weight', 'encoder.layer.0.attention.self.value.bias', 'encoder.layer.4.output.dense.weight', 'encoder.layer.0.output.dense.bias', 'encoder.layer.2.attention.self.key.bias', 'encoder.layer.8.attention.output.LayerNorm.weight', 'encoder.layer.11.attention.output.LayerNorm.weight', 'encoder.layer.9.attention.self.key.bias', 'encoder.layer.4.output.LayerNorm.bias', 'encoder.layer.10.output.dense.bias', 'encoder.layer.3.intermediate.dense.weight', 'encoder.layer.3.intermediate.dense.bias', 'encoder.layer.6.intermediate.dense.bias', 'classifier.dense.bias', 'encoder.layer.8.attention.self.key.bias', 'encoder.layer.1.attention.output.dense.bias', 'encoder.layer.8.attention.output.dense.weight', 'encoder.layer.5.attention.output.dense.bias', 'encoder.layer.5.attention.self.value.weight', 'encoder.layer.1.attention.self.query.weight', 'encoder.layer.2.output.dense.bias', 'encoder.layer.5.intermediate.dense.bias', 'encoder.layer.1.attention.self.key.bias', 'encoder.layer.6.attention.self.value.weight', 'encoder.layer.9.attention.output.dense.bias', 'encoder.layer.7.intermediate.dense.weight', 'encoder.layer.11.attention.self.key.weight', 'encoder.layer.1.output.dense.bias', 'encoder.layer.1.output.LayerNorm.bias', 'encoder.layer.6.attention.self.value.bias', 'encoder.layer.11.attention.self.value.bias', 'encoder.layer.9.output.LayerNorm.bias', 'encoder.layer.7.output.dense.weight', 'encoder.layer.2.attention.output.LayerNorm.bias', 'encoder.layer.5.attention.self.value.bias', 'encoder.layer.8.attention.self.value.weight', 'encoder.layer.7.attention.output.dense.bias', 'encoder.layer.4.intermediate.dense.bias', 'encoder.layer.8.intermediate.dense.bias', 'encoder.layer.9.output.dense.bias', 'classifier.out_proj.weight', 'encoder.layer.2.attention.self.query.bias', 'encoder.layer.8.attention.output.LayerNorm.bias', 'encoder.layer.0.output.dense.weight', 'encoder.layer.3.attention.output.dense.weight', 'encoder.layer.11.attention.self.value.weight', 'encoder.layer.6.attention.output.LayerNorm.weight', 'encoder.layer.1.attention.self.value.weight', 'encoder.layer.3.attention.self.query.weight', 'encoder.layer.4.attention.output.dense.bias', 'encoder.layer.1.attention.output.LayerNorm.bias', 'encoder.layer.10.output.LayerNorm.weight', 'encoder.layer.2.output.dense.weight', 'encoder.layer.3.output.dense.bias', 'encoder.layer.2.intermediate.dense.weight', 'encoder.layer.6.output.dense.bias', 'encoder.layer.9.attention.output.LayerNorm.weight', 'classifier.out_proj.bias', 'encoder.layer.7.attention.output.LayerNorm.weight', 'encoder.layer.3.output.LayerNorm.bias', 'encoder.layer.5.attention.output.LayerNorm.bias', 'encoder.layer.11.attention.self.key.bias', 'encoder.layer.11.attention.output.dense.weight', 'encoder.layer.3.attention.output.dense.bias', 'encoder.layer.8.output.dense.weight', 'encoder.layer.7.attention.self.value.bias', 'encoder.layer.4.attention.self.value.weight', 'encoder.layer.6.attention.output.dense.weight', 'encoder.layer.0.attention.self.query.bias', 'encoder.layer.3.attention.self.value.bias', 'encoder.layer.11.output.LayerNorm.bias', 'encoder.layer.11.attention.self.query.weight', 'encoder.layer.2.attention.output.dense.bias', 'embeddings.LayerNorm.bias', 'encoder.layer.4.output.dense.bias', 'encoder.layer.0.attention.self.value.weight', 'encoder.layer.10.output.dense.weight', 'encoder.layer.2.attention.self.value.bias', 'encoder.layer.11.intermediate.dense.weight', 'encoder.layer.11.output.dense.weight', 'encoder.layer.2.attention.output.LayerNorm.weight', 'encoder.layer.10.attention.output.LayerNorm.weight', 'encoder.layer.8.attention.self.value.bias', 'encoder.layer.7.output.dense.bias', 'encoder.layer.6.output.LayerNorm.bias', 'encoder.layer.10.intermediate.dense.bias', 'embeddings.word_embeddings.weight', 'classifier.dense.weight', 'encoder.layer.8.output.LayerNorm.bias', 'encoder.layer.10.output.LayerNorm.bias', 'encoder.layer.5.output.dense.weight', 'encoder.layer.2.attention.self.query.weight', 'encoder.layer.5.attention.output.dense.weight', 'encoder.layer.9.attention.self.query.weight', 'encoder.layer.0.intermediate.dense.bias', 'encoder.layer.5.output.dense.bias', 'encoder.layer.0.intermediate.dense.weight', 'encoder.layer.9.attention.self.value.bias', 'encoder.layer.8.attention.self.key.weight', 'encoder.layer.0.attention.output.LayerNorm.weight', 'encoder.layer.2.output.LayerNorm.weight', 'encoder.layer.7.attention.self.value.weight', 'encoder.layer.6.attention.self.query.bias', 'encoder.layer.7.attention.output.LayerNorm.bias', 'encoder.layer.9.output.LayerNorm.weight', 'encoder.layer.11.output.dense.bias', 'encoder.layer.1.output.dense.weight', 'encoder.layer.0.attention.output.dense.bias', 'encoder.layer.7.attention.self.query.bias', 'encoder.layer.8.attention.output.dense.bias', 'encoder.layer.9.attention.self.query.bias', 'encoder.layer.3.attention.self.query.bias', 'encoder.layer.9.attention.self.value.weight', 'encoder.layer.6.attention.output.LayerNorm.bias', 'encoder.layer.8.output.dense.bias', 'encoder.layer.0.attention.self.query.weight', 'encoder.layer.3.output.dense.weight', 'encoder.layer.4.attention.output.dense.weight', 'encoder.layer.5.attention.self.query.weight', 'encoder.layer.4.attention.self.query.weight', 'encoder.layer.3.attention.self.key.weight', 'encoder.layer.1.intermediate.dense.bias', 'encoder.layer.1.attention.output.dense.weight', 'encoder.layer.3.attention.self.key.bias', 'encoder.layer.5.attention.self.key.weight', 'encoder.layer.9.output.dense.weight', 'encoder.layer.10.attention.self.key.weight', 'encoder.layer.7.output.LayerNorm.bias', 'encoder.layer.3.attention.output.LayerNorm.bias', 'encoder.layer.0.output.LayerNorm.bias', 'encoder.layer.10.attention.self.key.bias', 'encoder.layer.4.attention.self.key.bias', 'encoder.layer.11.attention.self.query.bias', 'encoder.layer.2.output.LayerNorm.bias', 'encoder.layer.5.attention.self.query.bias', 'encoder.layer.7.attention.output.dense.weight', 'encoder.layer.1.attention.self.value.bias', 'encoder.layer.7.attention.self.query.weight', 'encoder.layer.10.attention.self.query.bias', 'encoder.layer.8.output.LayerNorm.weight', 'encoder.layer.4.attention.output.LayerNorm.bias', 'encoder.layer.11.output.LayerNorm.weight', 'encoder.layer.6.output.dense.weight', 'encoder.layer.3.attention.self.value.weight', 'encoder.layer.7.output.LayerNorm.weight', 'encoder.layer.1.attention.output.LayerNorm.weight', 'encoder.layer.9.attention.self.key.weight', 'encoder.layer.0.attention.output.LayerNorm.bias', 'encoder.layer.5.intermediate.dense.weight', 'encoder.layer.4.attention.self.key.weight', 'encoder.layer.5.attention.self.key.bias', 'encoder.layer.11.intermediate.dense.bias', 'encoder.layer.5.attention.output.LayerNorm.weight', 'encoder.layer.4.attention.self.query.bias', 'encoder.layer.10.attention.output.dense.weight', 'encoder.layer.11.attention.output.dense.bias', 'encoder.layer.6.attention.self.key.weight', 'encoder.layer.6.output.LayerNorm.weight', 'embeddings.LayerNorm.weight', 'encoder.layer.7.intermediate.dense.bias', 'encoder.layer.4.attention.output.LayerNorm.weight', 'encoder.layer.1.attention.self.query.bias', 'encoder.layer.6.attention.self.query.weight', 'encoder.layer.10.attention.output.LayerNorm.bias', 'encoder.layer.10.attention.self.query.weight', 'encoder.layer.6.intermediate.dense.weight', 'encoder.layer.10.attention.output.dense.bias', 'encoder.layer.8.attention.self.query.bias', 'encoder.layer.2.attention.self.key.weight', 'encoder.layer.5.output.LayerNorm.bias', 'encoder.layer.6.attention.self.key.bias', 'encoder.layer.7.attention.self.key.weight', 'encoder.layer.2.attention.output.dense.weight', 'encoder.layer.6.attention.output.dense.bias', 'encoder.layer.1.intermediate.dense.weight', 'encoder.layer.7.attention.self.key.bias', 'encoder.layer.4.output.LayerNorm.weight', 'encoder.layer.4.intermediate.dense.weight', 'encoder.layer.2.intermediate.dense.bias', 'encoder.layer.11.attention.output.LayerNorm.bias', 'encoder.layer.0.attention.self.key.weight', 'encoder.layer.2.attention.self.value.weight', 'encoder.layer.0.attention.output.dense.weight', 'encoder.layer.1.attention.self.key.weight', 'encoder.layer.9.intermediate.dense.weight', 'encoder.layer.0.attention.self.key.bias', 'encoder.layer.1.output.LayerNorm.weight', 'encoder.layer.3.attention.output.LayerNorm.weight', 'encoder.layer.8.attention.self.query.weight', 'encoder.layer.9.attention.output.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Using custom data configuration default-bdf2d38ff4c39ebf
Reusing dataset csv (/root/.cache/huggingface/datasets/csv/default-bdf2d38ff4c39ebf/0.0.0/51cce309a08df9c4d82ffd9363bbe090bf173197fc01a71b034e8594995a1a58)
100%
3/3 [00:00<00:00, 51.78it/s]
loading file https://huggingface.co/bertin-project/bertin-roberta-base-spanish/resolve/main/vocab.json from cache at /root/.cache/huggingface/transformers/f47efb87887425ef9a4ef795bfaa907d57ac9a650d733c7ca621b9eced3235e8.0b968504b15b2f5e6e9e491723f31987782cb976064aff9a7c6188cc2d5ce8bc
loading file https://huggingface.co/bertin-project/bertin-roberta-base-spanish/resolve/main/merges.txt from cache at /root/.cache/huggingface/transformers/aba9e0895dea47dd4208a36012ffd3eb21eb4c5f7ce0be6547afb37cdd4ddef4.0d24ae8bd5fabb1f5020f91bc602cefeb5a2938ab77e21769d28776345634b23
loading file https://huggingface.co/bertin-project/bertin-roberta-base-spanish/resolve/main/tokenizer.json from cache at /root/.cache/huggingface/transformers/baad57d0f574d3e660cafb14601d0ecebe83f25071d59f3e51d225d75285b773.23862d4cf295978aaf1f42b721fda2d8ece45b112d21f0c83905e5b05454e440
loading file https://huggingface.co/bertin-project/bertin-roberta-base-spanish/resolve/main/added_tokens.json from cache at None
loading file https://huggingface.co/bertin-project/bertin-roberta-base-spanish/resolve/main/special_tokens_map.json from cache at /root/.cache/huggingface/transformers/68d1fdfe72fdcac403d8f363239c379d8125162f50a954030c4476982f88d69e.cb2244924ab24d706b02fd7fcedaea4531566537687a539ebb94db511fd122a0
loading file https://huggingface.co/bertin-project/bertin-roberta-base-spanish/resolve/main/tokenizer_config.json from cache at /root/.cache/huggingface/transformers/72bf61c243630a112d8fa8c8d9162f1a5e01fab0602d2f2a7792cecdc0a4986f.a92abca7d07376fc2376db92d7f060b988d915ef9b2981c5616603a86c340fa0
Loading cached processed dataset at /root/.cache/huggingface/datasets/csv/default-bdf2d38ff4c39ebf/0.0.0/51cce309a08df9c4d82ffd9363bbe090bf173197fc01a71b034e8594995a1a58/cache-1c80317fa3b1799d.arrow
Loading cached processed dataset at /root/.cache/huggingface/datasets/csv/default-bdf2d38ff4c39ebf/0.0.0/51cce309a08df9c4d82ffd9363bbe090bf173197fc01a71b034e8594995a1a58/cache-bdd640fb06671ad1.arrow
Loading cached processed dataset at /root/.cache/huggingface/datasets/csv/default-bdf2d38ff4c39ebf/0.0.0/51cce309a08df9c4d82ffd9363bbe090bf173197fc01a71b034e8594995a1a58/cache-3eb13b9046685257.arrow
PyTorch: setting up devices
The default value for the training argument `--report_to` will change in v5 (from all installed integrations to none). In v5, you will need to use `--report_to all` to get the same behavior as now. You should start updating your code and make this info disappear :-).
The following columns in the training set don't have a corresponding argument in `RobertaForSequenceClassification.forward` and have been ignored: comment, comment_id, influencer_gender, media, influencer. If comment, comment_id, influencer_gender, media, influencer are not expected by `RobertaForSequenceClassification.forward`,  you can safely ignore this message.
/usr/local/lib/python3.7/dist-packages/transformers/optimization.py:310: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  FutureWarning,
***** Running training *****
  Num examples = 16710
  Num Epochs = 5
  Instantaneous batch size per device = 16
  Total train batch size (w. parallel, distributed & accumulation) = 16
  Gradient Accumulation steps = 1
  Total optimization steps = 5225
{'loss': 0.6286, 'learning_rate': 3.473229947717295e-05, 'epoch': 0.48}
{'loss': 0.5309, 'learning_rate': 3.1056923871122903e-05, 'epoch': 0.96}
The following columns in the evaluation set don't have a corresponding argument in `RobertaForSequenceClassification.forward` and have been ignored: comment, comment_id, influencer_gender, media, influencer. If comment, comment_id, influencer_gender, media, influencer are not expected by `RobertaForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 100
  Batch size = 16
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Saving model checkpoint to ./testBertinTwitter/2/checkpoint-1045
Configuration saved in ./testBertinTwitter/2/checkpoint-1045/config.json
{'eval_loss': 0.9835314750671387, 'eval_maf': 0.3886313465783664, 'eval_map': 0.4719109195402299, 'eval_mar': 0.37627840909090904, 'eval_mif': 0.69, 'eval_mip': 0.69, 'eval_mir': 0.69, 'eval_avgf': 0.6228962472406181, 'eval_avgp': 0.6185919540229885, 'eval_avgr': 0.69, 'eval_mse': 1.23, 'eval_runtime': 2.9987, 'eval_samples_per_second': 33.348, 'eval_steps_per_second': 2.334, 'learning_rate': 3.07261400665784e-05, 'epoch': 1.0}
Model weights saved in ./testBertinTwitter/2/checkpoint-1045/pytorch_model.bin
tokenizer config file saved in ./testBertinTwitter/2/checkpoint-1045/tokenizer_config.json
Special tokens file saved in ./testBertinTwitter/2/checkpoint-1045/special_tokens_map.json
{'loss': 0.4895, 'learning_rate': 2.7381548265072855e-05, 'epoch': 1.44}
{'loss': 0.4447, 'learning_rate': 2.3706172659022807e-05, 'epoch': 1.91}
The following columns in the evaluation set don't have a corresponding argument in `RobertaForSequenceClassification.forward` and have been ignored: comment, comment_id, influencer_gender, media, influencer. If comment, comment_id, influencer_gender, media, influencer are not expected by `RobertaForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 100
  Batch size = 16
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Saving model checkpoint to ./testBertinTwitter/2/checkpoint-2090
Configuration saved in ./testBertinTwitter/2/checkpoint-2090/config.json
{'eval_loss': 1.0782103538513184, 'eval_maf': 0.4381947261663286, 'eval_map': 0.5045681063122923, 'eval_mar': 0.4301846590909091, 'eval_mif': 0.72, 'eval_mip': 0.72, 'eval_mir': 0.72, 'eval_avgf': 0.653705476673428, 'eval_avgp': 0.6488372093023256, 'eval_avgr': 0.72, 'eval_mse': 1.09, 'eval_runtime': 2.9965, 'eval_samples_per_second': 33.372, 'eval_steps_per_second': 2.336, 'learning_rate': 2.30446050499338e-05, 'epoch': 2.0}
Model weights saved in ./testBertinTwitter/2/checkpoint-2090/pytorch_model.bin
tokenizer config file saved in ./testBertinTwitter/2/checkpoint-2090/tokenizer_config.json
Special tokens file saved in ./testBertinTwitter/2/checkpoint-2090/special_tokens_map.json
{'loss': 0.3898, 'learning_rate': 2.003079705297276e-05, 'epoch': 2.39}
{'loss': 0.3735, 'learning_rate': 1.635542144692271e-05, 'epoch': 2.87}
The following columns in the evaluation set don't have a corresponding argument in `RobertaForSequenceClassification.forward` and have been ignored: comment, comment_id, influencer_gender, media, influencer. If comment, comment_id, influencer_gender, media, influencer are not expected by `RobertaForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 100
  Batch size = 16
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Saving model checkpoint to ./testBertinTwitter/2/checkpoint-3135
Configuration saved in ./testBertinTwitter/2/checkpoint-3135/config.json
{'eval_loss': 0.9395774602890015, 'eval_maf': 0.4771844547293997, 'eval_map': 0.5223577235772358, 'eval_mar': 0.4740056818181818, 'eval_mif': 0.74, 'eval_mip': 0.74, 'eval_mir': 0.74, 'eval_avgf': 0.6882135962974161, 'eval_avgp': 0.6839024390243903, 'eval_avgr': 0.74, 'eval_mse': 0.93, 'eval_runtime': 2.9934, 'eval_samples_per_second': 33.407, 'eval_steps_per_second': 2.338, 'learning_rate': 1.53630700332892e-05, 'epoch': 3.0}
Model weights saved in ./testBertinTwitter/2/checkpoint-3135/pytorch_model.bin
tokenizer config file saved in ./testBertinTwitter/2/checkpoint-3135/tokenizer_config.json
Special tokens file saved in ./testBertinTwitter/2/checkpoint-3135/special_tokens_map.json
{'loss': 0.3383, 'learning_rate': 1.2680045840872665e-05, 'epoch': 3.35}
{'loss': 0.2977, 'learning_rate': 9.004670234822617e-06, 'epoch': 3.83}
The following columns in the evaluation set don't have a corresponding argument in `RobertaForSequenceClassification.forward` and have been ignored: comment, comment_id, influencer_gender, media, influencer. If comment, comment_id, influencer_gender, media, influencer are not expected by `RobertaForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 100
  Batch size = 16
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Saving model checkpoint to ./testBertinTwitter/2/checkpoint-4180
Configuration saved in ./testBertinTwitter/2/checkpoint-4180/config.json
{'eval_loss': 1.1447280645370483, 'eval_maf': 0.47274543378995426, 'eval_map': 0.5265243902439024, 'eval_mar': 0.46036931818181814, 'eval_mif': 0.74, 'eval_mip': 0.74, 'eval_mir': 0.74, 'eval_avgf': 0.692728310502283, 'eval_avgp': 0.6909024390243903, 'eval_avgr': 0.74, 'eval_mse': 0.9, 'eval_runtime': 2.9828, 'eval_samples_per_second': 33.526, 'eval_steps_per_second': 2.347, 'learning_rate': 7.6815350166446e-06, 'epoch': 4.0}
Model weights saved in ./testBertinTwitter/2/checkpoint-4180/pytorch_model.bin
tokenizer config file saved in ./testBertinTwitter/2/checkpoint-4180/tokenizer_config.json
Special tokens file saved in ./testBertinTwitter/2/checkpoint-4180/special_tokens_map.json
{'loss': 0.2778, 'learning_rate': 5.32929462877257e-06, 'epoch': 4.31}
{'loss': 0.2483, 'learning_rate': 1.6539190227225216e-06, 'epoch': 4.78}
The following columns in the evaluation set don't have a corresponding argument in `RobertaForSequenceClassification.forward` and have been ignored: comment, comment_id, influencer_gender, media, influencer. If comment, comment_id, influencer_gender, media, influencer are not expected by `RobertaForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 100
  Batch size = 16
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Saving model checkpoint to ./testBertinTwitter/2/checkpoint-5225
Configuration saved in ./testBertinTwitter/2/checkpoint-5225/config.json
{'eval_loss': 1.2035959959030151, 'eval_maf': 0.4786776212832551, 'eval_map': 0.5080128205128205, 'eval_mar': 0.4678267045454545, 'eval_mif': 0.74, 'eval_mip': 0.74, 'eval_mir': 0.74, 'eval_avgf': 0.7020813771517997, 'eval_avgp': 0.6855128205128205, 'eval_avgr': 0.74, 'eval_mse': 1.06, 'eval_runtime': 2.9798, 'eval_samples_per_second': 33.559, 'eval_steps_per_second': 2.349, 'learning_rate': 0.0, 'epoch': 5.0}
Model weights saved in ./testBertinTwitter/2/checkpoint-5225/pytorch_model.bin
tokenizer config file saved in ./testBertinTwitter/2/checkpoint-5225/tokenizer_config.json
Special tokens file saved in ./testBertinTwitter/2/checkpoint-5225/special_tokens_map.json


Training completed. Do not forget to share your model on huggingface.co/models =)


Loading best model from ./testBertinTwitter/2/checkpoint-3135 (score: 0.9395774602890015).
The following columns in the evaluation set don't have a corresponding argument in `RobertaForSequenceClassification.forward` and have been ignored: comment, comment_id, influencer_gender, media, influencer. If comment, comment_id, influencer_gender, media, influencer are not expected by `RobertaForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 100
  Batch size = 16
{'train_runtime': 7339.6446, 'train_samples_per_second': 11.383, 'train_steps_per_second': 0.712, 'train_loss': 0.3955432158109674, 'learning_rate': 0.0, 'epoch': 5.0}
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
[I 2022-07-17 05:56:15,370] Trial 2 finished with value: 0.3955432158109674 and parameters: {'learning_rate': 3.8407675083223e-05, 'weight_decay': 0.000980069472021438, 'per_device_train_batch_size': 16}. Best is trial 2 with value: 0.3955432158109674.
{'eval_loss': 0.9395774602890015, 'eval_maf': 0.4771844547293997, 'eval_map': 0.5223577235772358, 'eval_mar': 0.4740056818181818, 'eval_mif': 0.74, 'eval_mip': 0.74, 'eval_mir': 0.74, 'eval_avgf': 0.6882135962974161, 'eval_avgp': 0.6839024390243903, 'eval_avgr': 0.74, 'eval_mse': 0.93, 'eval_runtime': 3.0332, 'eval_samples_per_second': 32.968, 'eval_steps_per_second': 2.308, 'learning_rate': 0.0, 'epoch': 5.0}
loading configuration file https://huggingface.co/maxpe/bertin-roberta-base-spanish_semeval18_emodetection/resolve/main/config.json from cache at /root/.cache/huggingface/transformers/d4f1002ff603556d7da9b1dcc4f60837cb7b95475014ed3dca46003df9e5e073.3e6584dcdee85903ac728aeaf3e164cbeb7221cab9b7b326e24422b622ae0ef6
Model config RobertaConfig {
  "_name_or_path": "maxpe/bertin-roberta-base-spanish_semeval18_emodetection",
  "architectures": [
    "RobertaForSequenceClassification"
  ],
  "attention_probs_dropout_prob": 0.1,
  "bos_token_id": 0,
  "classifier_dropout": null,
  "eos_token_id": 2,
  "gradient_checkpointing": false,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "id2label": {
    "0": "LABEL_0",
    "1": "LABEL_1",
    "2": "LABEL_2",
    "3": "LABEL_3"
  },
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "label2id": {
    "LABEL_0": 0,
    "LABEL_1": 1,
    "LABEL_2": 2,
    "LABEL_3": 3
  },
  "layer_norm_eps": 1e-05,
  "max_position_embeddings": 514,
  "model_type": "roberta",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 1,
  "position_embedding_type": "absolute",
  "problem_type": "multi_label_classification",
  "transformers_version": "4.20.1",
  "type_vocab_size": 1,
  "use_cache": true,
  "vocab_size": 50265
}

loading weights file https://huggingface.co/maxpe/bertin-roberta-base-spanish_semeval18_emodetection/resolve/main/pytorch_model.bin from cache at /root/.cache/huggingface/transformers/d900c79ff1498657eb796142ec4f35629e79499bc87fff9f3226694959c66fc9.35439f36ce44b15b9d01b0b86490d9df3be95efe408acf4f3f724e10a60defb0
Some weights of the model checkpoint at maxpe/bertin-roberta-base-spanish_semeval18_emodetection were not used when initializing RobertaForSequenceClassification: ['l1.encoder.layer.11.attention.output.dense.weight', 'l1.encoder.layer.7.intermediate.dense.bias', 'l1.embeddings.position_embeddings.weight', 'l1.encoder.layer.0.attention.output.dense.weight', 'l1.encoder.layer.2.attention.self.query.bias', 'l1.encoder.layer.4.attention.output.dense.weight', 'l1.encoder.layer.6.output.dense.bias', 'l1.encoder.layer.6.attention.self.query.bias', 'l1.encoder.layer.10.attention.self.value.weight', 'l1.encoder.layer.7.attention.self.key.weight', 'l1.encoder.layer.7.attention.self.value.weight', 'l1.encoder.layer.5.intermediate.dense.bias', 'l1.encoder.layer.1.output.dense.bias', 'l1.encoder.layer.0.attention.self.query.bias', 'l1.encoder.layer.6.intermediate.dense.weight', 'l1.encoder.layer.7.output.dense.bias', 'l1.encoder.layer.1.attention.self.value.weight', 'l1.encoder.layer.3.attention.output.dense.bias', 'l1.encoder.layer.10.output.LayerNorm.bias', 'l1.encoder.layer.4.intermediate.dense.weight', 'l1.encoder.layer.11.attention.self.query.weight', 'l1.encoder.layer.7.attention.self.value.bias', 'l1.encoder.layer.3.attention.output.LayerNorm.weight', 'l1.encoder.layer.3.intermediate.dense.bias', 'l1.encoder.layer.0.output.LayerNorm.bias', 'l1.encoder.layer.7.attention.self.key.bias', 'l1.encoder.layer.1.attention.output.dense.weight', 'l1.encoder.layer.8.attention.self.key.weight', 'l1.encoder.layer.4.attention.output.dense.bias', 'l1.encoder.layer.6.attention.output.dense.weight', 'l1.encoder.layer.9.attention.output.dense.bias', 'l1.encoder.layer.8.attention.self.query.weight', 'l1.encoder.layer.1.attention.output.dense.bias', 'l1.encoder.layer.0.attention.self.value.weight', 'l1.encoder.layer.5.attention.output.LayerNorm.bias', 'l1.encoder.layer.4.attention.self.query.bias', 'l1.encoder.layer.10.attention.output.dense.weight', 'l1.encoder.layer.8.attention.output.LayerNorm.bias', 'l1.encoder.layer.2.attention.output.dense.weight', 'l1.encoder.layer.8.output.LayerNorm.bias', 'l1.embeddings.LayerNorm.bias', 'l1.encoder.layer.4.attention.output.LayerNorm.weight', 'l3.weight', 'l1.embeddings.word_embeddings.weight', 'l1.encoder.layer.11.attention.self.key.bias', 'l3.bias', 'l1.encoder.layer.2.attention.self.query.weight', 'l1.encoder.layer.8.attention.self.value.weight', 'l1.encoder.layer.4.output.dense.weight', 'l1.encoder.layer.4.attention.self.value.bias', 'l1.encoder.layer.6.attention.self.value.bias', 'l1.encoder.layer.11.attention.self.query.bias', 'l1.encoder.layer.0.attention.self.key.bias', 'l1.encoder.layer.4.attention.self.query.weight', 'l1.encoder.layer.2.intermediate.dense.weight', 'l1.encoder.layer.11.attention.self.key.weight', 'l1.encoder.layer.0.intermediate.dense.bias', 'l1.encoder.layer.11.attention.output.LayerNorm.bias', 'l1.encoder.layer.8.attention.output.LayerNorm.weight', 'l1.encoder.layer.5.attention.self.query.bias', 'l1.encoder.layer.11.output.dense.weight', 'l1.encoder.layer.10.intermediate.dense.weight', 'l1.encoder.layer.7.attention.self.query.bias', 'l1.encoder.layer.3.attention.self.query.weight', 'l1.encoder.layer.3.attention.self.query.bias', 'l1.encoder.layer.11.intermediate.dense.weight', 'l1.encoder.layer.10.attention.output.LayerNorm.weight', 'l1.encoder.layer.11.attention.output.LayerNorm.weight', 'l1.encoder.layer.11.attention.self.value.weight', 'l1.encoder.layer.3.output.dense.bias', 'l1.encoder.layer.1.intermediate.dense.bias', 'l1.encoder.layer.1.attention.output.LayerNorm.weight', 'l1.encoder.layer.10.output.dense.weight', 'l1.embeddings.position_ids', 'l1.encoder.layer.1.output.dense.weight', 'l1.encoder.layer.9.attention.output.LayerNorm.bias', 'l1.encoder.layer.2.attention.output.LayerNorm.bias', 'l1.encoder.layer.9.attention.self.key.weight', 'l1.encoder.layer.3.attention.output.dense.weight', 'l1.encoder.layer.9.attention.self.query.bias', 'l1.encoder.layer.9.attention.output.dense.weight', 'l1.encoder.layer.9.attention.output.LayerNorm.weight', 'l1.encoder.layer.11.output.dense.bias', 'l1.pooler.dense.weight', 'l1.encoder.layer.5.attention.self.key.bias', 'l1.encoder.layer.6.output.dense.weight', 'l1.encoder.layer.2.attention.self.value.bias', 'l1.encoder.layer.11.intermediate.dense.bias', 'l1.encoder.layer.1.intermediate.dense.weight', 'l1.encoder.layer.4.output.dense.bias', 'l1.encoder.layer.7.output.dense.weight', 'l1.encoder.layer.11.output.LayerNorm.bias', 'l1.encoder.layer.2.intermediate.dense.bias', 'l1.encoder.layer.3.intermediate.dense.weight', 'l1.encoder.layer.9.attention.self.key.bias', 'l1.encoder.layer.0.output.dense.bias', 'l1.encoder.layer.6.intermediate.dense.bias', 'l1.encoder.layer.7.attention.output.dense.weight', 'l1.encoder.layer.8.attention.self.key.bias', 'l1.encoder.layer.11.attention.output.dense.bias', 'l1.encoder.layer.8.attention.output.dense.weight', 'l1.encoder.layer.11.output.LayerNorm.weight', 'l1.encoder.layer.5.attention.output.LayerNorm.weight', 'l1.encoder.layer.0.attention.output.LayerNorm.bias', 'l1.encoder.layer.5.intermediate.dense.weight', 'l1.encoder.layer.8.attention.self.query.bias', 'l1.encoder.layer.10.attention.self.value.bias', 'l1.encoder.layer.5.output.dense.weight', 'l1.encoder.layer.6.attention.self.key.bias', 'l1.encoder.layer.7.attention.self.query.weight', 'l1.encoder.layer.6.output.LayerNorm.bias', 'l1.encoder.layer.2.attention.output.LayerNorm.weight', 'l1.encoder.layer.0.intermediate.dense.weight', 'l1.encoder.layer.8.output.dense.bias', 'l1.encoder.layer.9.intermediate.dense.bias', 'l1.encoder.layer.6.attention.output.LayerNorm.bias', 'l1.encoder.layer.7.attention.output.LayerNorm.weight', 'l1.encoder.layer.4.output.LayerNorm.weight', 'l1.encoder.layer.9.output.LayerNorm.weight', 'l1.encoder.layer.1.output.LayerNorm.bias', 'l1.encoder.layer.3.attention.self.value.bias', 'l1.encoder.layer.1.attention.self.key.bias', 'l1.encoder.layer.6.attention.self.query.weight', 'l1.encoder.layer.2.attention.output.dense.bias', 'l1.encoder.layer.0.attention.self.key.weight', 'l1.encoder.layer.4.attention.self.value.weight', 'l1.encoder.layer.0.output.LayerNorm.weight', 'l1.encoder.layer.6.attention.self.key.weight', 'l1.encoder.layer.0.attention.self.query.weight', 'l1.encoder.layer.11.attention.self.value.bias', 'l1.encoder.layer.5.output.LayerNorm.bias', 'l1.encoder.layer.10.output.dense.bias', 'l1.encoder.layer.2.output.dense.bias', 'l1.encoder.layer.5.attention.self.query.weight', 'l1.encoder.layer.7.attention.output.dense.bias', 'l1.encoder.layer.9.output.dense.bias', 'l1.encoder.layer.2.attention.self.key.weight', 'l1.encoder.layer.2.output.dense.weight', 'l1.encoder.layer.10.intermediate.dense.bias', 'l1.encoder.layer.8.output.LayerNorm.weight', 'l1.encoder.layer.3.output.dense.weight', 'l1.encoder.layer.1.attention.self.query.bias', 'l1.encoder.layer.10.output.LayerNorm.weight', 'l1.encoder.layer.3.output.LayerNorm.bias', 'l1.encoder.layer.7.output.LayerNorm.weight', 'l1.encoder.layer.4.intermediate.dense.bias', 'l1.encoder.layer.9.attention.self.value.bias', 'l1.encoder.layer.7.attention.output.LayerNorm.bias', 'l1.encoder.layer.8.intermediate.dense.weight', 'l1.encoder.layer.2.attention.self.key.bias', 'l1.encoder.layer.4.attention.output.LayerNorm.bias', 'l1.encoder.layer.6.attention.output.dense.bias', 'l1.embeddings.LayerNorm.weight', 'l1.encoder.layer.2.output.LayerNorm.bias', 'l1.encoder.layer.8.output.dense.weight', 'l1.encoder.layer.7.output.LayerNorm.bias', 'l1.encoder.layer.1.output.LayerNorm.weight', 'l1.encoder.layer.0.output.dense.weight', 'l1.encoder.layer.1.attention.output.LayerNorm.bias', 'l1.encoder.layer.10.attention.self.key.weight', 'l1.encoder.layer.9.attention.self.value.weight', 'l1.encoder.layer.6.output.LayerNorm.weight', 'l1.encoder.layer.3.attention.self.key.weight', 'l1.encoder.layer.1.attention.self.key.weight', 'l1.encoder.layer.10.attention.self.query.bias', 'l1.encoder.layer.1.attention.self.value.bias', 'l1.encoder.layer.9.attention.self.query.weight', 'l1.encoder.layer.8.intermediate.dense.bias', 'l1.encoder.layer.0.attention.self.value.bias', 'l1.encoder.layer.4.attention.self.key.weight', 'l1.encoder.layer.0.attention.output.LayerNorm.weight', 'l1.encoder.layer.9.output.LayerNorm.bias', 'l1.encoder.layer.9.output.dense.weight', 'l1.encoder.layer.10.attention.output.LayerNorm.bias', 'l1.encoder.layer.5.attention.self.key.weight', 'l1.encoder.layer.9.intermediate.dense.weight', 'l1.encoder.layer.8.attention.self.value.bias', 'l1.encoder.layer.0.attention.output.dense.bias', 'l1.encoder.layer.2.attention.self.value.weight', 'l1.encoder.layer.5.output.LayerNorm.weight', 'l1.encoder.layer.8.attention.output.dense.bias', 'l1.encoder.layer.3.attention.self.key.bias', 'l1.encoder.layer.6.attention.self.value.weight', 'l1.encoder.layer.3.output.LayerNorm.weight', 'l1.encoder.layer.5.attention.self.value.bias', 'l1.embeddings.token_type_embeddings.weight', 'l1.encoder.layer.3.attention.self.value.weight', 'l1.encoder.layer.5.output.dense.bias', 'l1.encoder.layer.7.intermediate.dense.weight', 'l1.pooler.dense.bias', 'l1.encoder.layer.5.attention.self.value.weight', 'l1.encoder.layer.4.output.LayerNorm.bias', 'l1.encoder.layer.2.output.LayerNorm.weight', 'l1.encoder.layer.1.attention.self.query.weight', 'l1.encoder.layer.3.attention.output.LayerNorm.bias', 'l1.encoder.layer.5.attention.output.dense.weight', 'l1.encoder.layer.4.attention.self.key.bias', 'l1.encoder.layer.5.attention.output.dense.bias', 'l1.encoder.layer.6.attention.output.LayerNorm.weight', 'l1.encoder.layer.10.attention.self.query.weight', 'l1.encoder.layer.10.attention.output.dense.bias', 'l1.encoder.layer.10.attention.self.key.bias']
- This IS expected if you are initializing RobertaForSequenceClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaForSequenceClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of RobertaForSequenceClassification were not initialized from the model checkpoint at maxpe/bertin-roberta-base-spanish_semeval18_emodetection and are newly initialized: ['encoder.layer.10.attention.self.value.weight', 'encoder.layer.9.attention.output.LayerNorm.bias', 'encoder.layer.9.intermediate.dense.bias', 'embeddings.position_embeddings.weight', 'encoder.layer.0.output.LayerNorm.weight', 'embeddings.token_type_embeddings.weight', 'encoder.layer.5.output.LayerNorm.weight', 'encoder.layer.10.attention.self.value.bias', 'encoder.layer.10.intermediate.dense.weight', 'encoder.layer.8.intermediate.dense.weight', 'encoder.layer.4.attention.self.value.bias', 'encoder.layer.3.output.LayerNorm.weight', 'encoder.layer.0.attention.self.value.bias', 'encoder.layer.4.output.dense.weight', 'encoder.layer.0.output.dense.bias', 'encoder.layer.2.attention.self.key.bias', 'encoder.layer.8.attention.output.LayerNorm.weight', 'encoder.layer.11.attention.output.LayerNorm.weight', 'encoder.layer.9.attention.self.key.bias', 'encoder.layer.4.output.LayerNorm.bias', 'encoder.layer.10.output.dense.bias', 'encoder.layer.3.intermediate.dense.weight', 'encoder.layer.3.intermediate.dense.bias', 'encoder.layer.6.intermediate.dense.bias', 'classifier.dense.bias', 'encoder.layer.8.attention.self.key.bias', 'encoder.layer.1.attention.output.dense.bias', 'encoder.layer.8.attention.output.dense.weight', 'encoder.layer.5.attention.output.dense.bias', 'encoder.layer.5.attention.self.value.weight', 'encoder.layer.1.attention.self.query.weight', 'encoder.layer.2.output.dense.bias', 'encoder.layer.5.intermediate.dense.bias', 'encoder.layer.1.attention.self.key.bias', 'encoder.layer.6.attention.self.value.weight', 'encoder.layer.9.attention.output.dense.bias', 'encoder.layer.7.intermediate.dense.weight', 'encoder.layer.11.attention.self.key.weight', 'encoder.layer.1.output.dense.bias', 'encoder.layer.1.output.LayerNorm.bias', 'encoder.layer.6.attention.self.value.bias', 'encoder.layer.11.attention.self.value.bias', 'encoder.layer.9.output.LayerNorm.bias', 'encoder.layer.7.output.dense.weight', 'encoder.layer.2.attention.output.LayerNorm.bias', 'encoder.layer.5.attention.self.value.bias', 'encoder.layer.8.attention.self.value.weight', 'encoder.layer.7.attention.output.dense.bias', 'encoder.layer.4.intermediate.dense.bias', 'encoder.layer.8.intermediate.dense.bias', 'encoder.layer.9.output.dense.bias', 'classifier.out_proj.weight', 'encoder.layer.2.attention.self.query.bias', 'encoder.layer.8.attention.output.LayerNorm.bias', 'encoder.layer.0.output.dense.weight', 'encoder.layer.3.attention.output.dense.weight', 'encoder.layer.11.attention.self.value.weight', 'encoder.layer.6.attention.output.LayerNorm.weight', 'encoder.layer.1.attention.self.value.weight', 'encoder.layer.3.attention.self.query.weight', 'encoder.layer.4.attention.output.dense.bias', 'encoder.layer.1.attention.output.LayerNorm.bias', 'encoder.layer.10.output.LayerNorm.weight', 'encoder.layer.2.output.dense.weight', 'encoder.layer.3.output.dense.bias', 'encoder.layer.2.intermediate.dense.weight', 'encoder.layer.6.output.dense.bias', 'encoder.layer.9.attention.output.LayerNorm.weight', 'classifier.out_proj.bias', 'encoder.layer.7.attention.output.LayerNorm.weight', 'encoder.layer.3.output.LayerNorm.bias', 'encoder.layer.5.attention.output.LayerNorm.bias', 'encoder.layer.11.attention.self.key.bias', 'encoder.layer.11.attention.output.dense.weight', 'encoder.layer.3.attention.output.dense.bias', 'encoder.layer.8.output.dense.weight', 'encoder.layer.7.attention.self.value.bias', 'encoder.layer.4.attention.self.value.weight', 'encoder.layer.6.attention.output.dense.weight', 'encoder.layer.0.attention.self.query.bias', 'encoder.layer.3.attention.self.value.bias', 'encoder.layer.11.output.LayerNorm.bias', 'encoder.layer.11.attention.self.query.weight', 'encoder.layer.2.attention.output.dense.bias', 'embeddings.LayerNorm.bias', 'encoder.layer.4.output.dense.bias', 'encoder.layer.0.attention.self.value.weight', 'encoder.layer.10.output.dense.weight', 'encoder.layer.2.attention.self.value.bias', 'encoder.layer.11.intermediate.dense.weight', 'encoder.layer.11.output.dense.weight', 'encoder.layer.2.attention.output.LayerNorm.weight', 'encoder.layer.10.attention.output.LayerNorm.weight', 'encoder.layer.8.attention.self.value.bias', 'encoder.layer.7.output.dense.bias', 'encoder.layer.6.output.LayerNorm.bias', 'encoder.layer.10.intermediate.dense.bias', 'embeddings.word_embeddings.weight', 'classifier.dense.weight', 'encoder.layer.8.output.LayerNorm.bias', 'encoder.layer.10.output.LayerNorm.bias', 'encoder.layer.5.output.dense.weight', 'encoder.layer.2.attention.self.query.weight', 'encoder.layer.5.attention.output.dense.weight', 'encoder.layer.9.attention.self.query.weight', 'encoder.layer.0.intermediate.dense.bias', 'encoder.layer.5.output.dense.bias', 'encoder.layer.0.intermediate.dense.weight', 'encoder.layer.9.attention.self.value.bias', 'encoder.layer.8.attention.self.key.weight', 'encoder.layer.0.attention.output.LayerNorm.weight', 'encoder.layer.2.output.LayerNorm.weight', 'encoder.layer.7.attention.self.value.weight', 'encoder.layer.6.attention.self.query.bias', 'encoder.layer.7.attention.output.LayerNorm.bias', 'encoder.layer.9.output.LayerNorm.weight', 'encoder.layer.11.output.dense.bias', 'encoder.layer.1.output.dense.weight', 'encoder.layer.0.attention.output.dense.bias', 'encoder.layer.7.attention.self.query.bias', 'encoder.layer.8.attention.output.dense.bias', 'encoder.layer.9.attention.self.query.bias', 'encoder.layer.3.attention.self.query.bias', 'encoder.layer.9.attention.self.value.weight', 'encoder.layer.6.attention.output.LayerNorm.bias', 'encoder.layer.8.output.dense.bias', 'encoder.layer.0.attention.self.query.weight', 'encoder.layer.3.output.dense.weight', 'encoder.layer.4.attention.output.dense.weight', 'encoder.layer.5.attention.self.query.weight', 'encoder.layer.4.attention.self.query.weight', 'encoder.layer.3.attention.self.key.weight', 'encoder.layer.1.intermediate.dense.bias', 'encoder.layer.1.attention.output.dense.weight', 'encoder.layer.3.attention.self.key.bias', 'encoder.layer.5.attention.self.key.weight', 'encoder.layer.9.output.dense.weight', 'encoder.layer.10.attention.self.key.weight', 'encoder.layer.7.output.LayerNorm.bias', 'encoder.layer.3.attention.output.LayerNorm.bias', 'encoder.layer.0.output.LayerNorm.bias', 'encoder.layer.10.attention.self.key.bias', 'encoder.layer.4.attention.self.key.bias', 'encoder.layer.11.attention.self.query.bias', 'encoder.layer.2.output.LayerNorm.bias', 'encoder.layer.5.attention.self.query.bias', 'encoder.layer.7.attention.output.dense.weight', 'encoder.layer.1.attention.self.value.bias', 'encoder.layer.7.attention.self.query.weight', 'encoder.layer.10.attention.self.query.bias', 'encoder.layer.8.output.LayerNorm.weight', 'encoder.layer.4.attention.output.LayerNorm.bias', 'encoder.layer.11.output.LayerNorm.weight', 'encoder.layer.6.output.dense.weight', 'encoder.layer.3.attention.self.value.weight', 'encoder.layer.7.output.LayerNorm.weight', 'encoder.layer.1.attention.output.LayerNorm.weight', 'encoder.layer.9.attention.self.key.weight', 'encoder.layer.0.attention.output.LayerNorm.bias', 'encoder.layer.5.intermediate.dense.weight', 'encoder.layer.4.attention.self.key.weight', 'encoder.layer.5.attention.self.key.bias', 'encoder.layer.11.intermediate.dense.bias', 'encoder.layer.5.attention.output.LayerNorm.weight', 'encoder.layer.4.attention.self.query.bias', 'encoder.layer.10.attention.output.dense.weight', 'encoder.layer.11.attention.output.dense.bias', 'encoder.layer.6.attention.self.key.weight', 'encoder.layer.6.output.LayerNorm.weight', 'embeddings.LayerNorm.weight', 'encoder.layer.7.intermediate.dense.bias', 'encoder.layer.4.attention.output.LayerNorm.weight', 'encoder.layer.1.attention.self.query.bias', 'encoder.layer.6.attention.self.query.weight', 'encoder.layer.10.attention.output.LayerNorm.bias', 'encoder.layer.10.attention.self.query.weight', 'encoder.layer.6.intermediate.dense.weight', 'encoder.layer.10.attention.output.dense.bias', 'encoder.layer.8.attention.self.query.bias', 'encoder.layer.2.attention.self.key.weight', 'encoder.layer.5.output.LayerNorm.bias', 'encoder.layer.6.attention.self.key.bias', 'encoder.layer.7.attention.self.key.weight', 'encoder.layer.2.attention.output.dense.weight', 'encoder.layer.6.attention.output.dense.bias', 'encoder.layer.1.intermediate.dense.weight', 'encoder.layer.7.attention.self.key.bias', 'encoder.layer.4.output.LayerNorm.weight', 'encoder.layer.4.intermediate.dense.weight', 'encoder.layer.2.intermediate.dense.bias', 'encoder.layer.11.attention.output.LayerNorm.bias', 'encoder.layer.0.attention.self.key.weight', 'encoder.layer.2.attention.self.value.weight', 'encoder.layer.0.attention.output.dense.weight', 'encoder.layer.1.attention.self.key.weight', 'encoder.layer.9.intermediate.dense.weight', 'encoder.layer.0.attention.self.key.bias', 'encoder.layer.1.output.LayerNorm.weight', 'encoder.layer.3.attention.output.LayerNorm.weight', 'encoder.layer.8.attention.self.query.weight', 'encoder.layer.9.attention.output.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Using custom data configuration default-bdf2d38ff4c39ebf
Reusing dataset csv (/root/.cache/huggingface/datasets/csv/default-bdf2d38ff4c39ebf/0.0.0/51cce309a08df9c4d82ffd9363bbe090bf173197fc01a71b034e8594995a1a58)
100%
3/3 [00:00<00:00, 40.76it/s]
loading file https://huggingface.co/bertin-project/bertin-roberta-base-spanish/resolve/main/vocab.json from cache at /root/.cache/huggingface/transformers/f47efb87887425ef9a4ef795bfaa907d57ac9a650d733c7ca621b9eced3235e8.0b968504b15b2f5e6e9e491723f31987782cb976064aff9a7c6188cc2d5ce8bc
loading file https://huggingface.co/bertin-project/bertin-roberta-base-spanish/resolve/main/merges.txt from cache at /root/.cache/huggingface/transformers/aba9e0895dea47dd4208a36012ffd3eb21eb4c5f7ce0be6547afb37cdd4ddef4.0d24ae8bd5fabb1f5020f91bc602cefeb5a2938ab77e21769d28776345634b23
loading file https://huggingface.co/bertin-project/bertin-roberta-base-spanish/resolve/main/tokenizer.json from cache at /root/.cache/huggingface/transformers/baad57d0f574d3e660cafb14601d0ecebe83f25071d59f3e51d225d75285b773.23862d4cf295978aaf1f42b721fda2d8ece45b112d21f0c83905e5b05454e440
loading file https://huggingface.co/bertin-project/bertin-roberta-base-spanish/resolve/main/added_tokens.json from cache at None
loading file https://huggingface.co/bertin-project/bertin-roberta-base-spanish/resolve/main/special_tokens_map.json from cache at /root/.cache/huggingface/transformers/68d1fdfe72fdcac403d8f363239c379d8125162f50a954030c4476982f88d69e.cb2244924ab24d706b02fd7fcedaea4531566537687a539ebb94db511fd122a0
loading file https://huggingface.co/bertin-project/bertin-roberta-base-spanish/resolve/main/tokenizer_config.json from cache at /root/.cache/huggingface/transformers/72bf61c243630a112d8fa8c8d9162f1a5e01fab0602d2f2a7792cecdc0a4986f.a92abca7d07376fc2376db92d7f060b988d915ef9b2981c5616603a86c340fa0
Loading cached processed dataset at /root/.cache/huggingface/datasets/csv/default-bdf2d38ff4c39ebf/0.0.0/51cce309a08df9c4d82ffd9363bbe090bf173197fc01a71b034e8594995a1a58/cache-1c80317fa3b1799d.arrow
Loading cached processed dataset at /root/.cache/huggingface/datasets/csv/default-bdf2d38ff4c39ebf/0.0.0/51cce309a08df9c4d82ffd9363bbe090bf173197fc01a71b034e8594995a1a58/cache-bdd640fb06671ad1.arrow
Loading cached processed dataset at /root/.cache/huggingface/datasets/csv/default-bdf2d38ff4c39ebf/0.0.0/51cce309a08df9c4d82ffd9363bbe090bf173197fc01a71b034e8594995a1a58/cache-3eb13b9046685257.arrow
